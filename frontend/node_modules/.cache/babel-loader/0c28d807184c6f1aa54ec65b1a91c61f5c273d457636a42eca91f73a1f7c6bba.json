{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Raluca.Sodinca\\\\Disertatie2\\\\frontend\\\\src\\\\sign-in\\\\SignIn.tsx\",\n  _s = $RefreshSig$();\n// import * as React from 'react';\n// import Box from '@mui/material/Box';\n// import Button from '@mui/material/Button';\n// import Checkbox from '@mui/material/Checkbox';\n// import CssBaseline from '@mui/material/CssBaseline';\n// import FormControlLabel from '@mui/material/FormControlLabel';\n// import FormLabel from '@mui/material/FormLabel';\n// import FormControl from '@mui/material/FormControl';\n// import Link from '@mui/material/Link';\n// import TextField from '@mui/material/TextField';\n// import Typography from '@mui/material/Typography';\n// import Stack from '@mui/material/Stack';\n// import MuiCard from '@mui/material/Card';\n// import { styled } from '@mui/material/styles';\n// import ForgotPassword from './ForgotPassword';\n// import AppTheme from '../shared-theme/AppTheme';\n\n// const Card = styled(MuiCard)(({ theme }) => ({\n//   display: 'flex',\n//   flexDirection: 'column',\n//   alignSelf: 'center',\n//   width: '200%',\n//   padding: theme.spacing(4),\n//   gap: theme.spacing(2),\n//   [theme.breakpoints.up('sm')]: {\n//     maxWidth: '450px',\n//   },\n//   boxShadow:\n//     'hsla(220, 30%, 5%, 0.05) 0px 5px 15px 0px, hsla(220, 25%, 10%, 0.05) 0px 15px 35px -5px',\n//   ...theme.applyStyles('dark', {\n//     boxShadow:\n//       'hsla(220, 30%, 5%, 0.5) 0px 5px 15px 0px, hsla(220, 25%, 10%, 0.08) 0px 15px 35px -5px',\n//   }),\n// }));\n\n// const SignInContainer = styled(Stack)(({ theme }) => ({\n//   minHeight: '100%',\n//   padding: theme.spacing(2),\n//   [theme.breakpoints.up('sm')]: {\n//     padding: theme.spacing(4),\n//   },\n//   '&::before': {\n//     content: '\"\"',\n//     display: 'block',\n//     position: 'absolute',\n//     zIndex: -1,\n//     inset: 0,\n//     backgroundImage:\n//       'radial-gradient(ellipse at 50% 50%, hsl(210, 100%, 97%), hsl(0, 0%, 100%))',\n//     backgroundRepeat: 'no-repeat',\n//     ...theme.applyStyles('dark', {\n//       backgroundImage:\n//         'radial-gradient(at 50% 50%, hsla(210, 100%, 16%, 0.5), hsl(220, 30%, 5%))',\n//     }),\n//   },\n// }));\n\n// interface SignInProps {\n//   // Define props if needed\n// }\n\n// const SignIn: React.FC<SignInProps> = (props) => {\n//   const [emailError, setEmailError] = React.useState<boolean>(false);\n//   const [emailErrorMessage, setEmailErrorMessage] = React.useState<string>('');\n//   const [passwordError, setPasswordError] = React.useState<boolean>(false);\n//   const [passwordErrorMessage, setPasswordErrorMessage] = React.useState<string>('');\n//   const [open, setOpen] = React.useState<boolean>(false);\n\n//   const handleClickOpen = () => {\n//     setOpen(true);\n//   };\n\n//   const handleClose = () => {\n//     setOpen(false);\n//   };\n\n//   const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n//     event.preventDefault();\n//     if (emailError || passwordError) {\n//       return;\n//     }\n//     const data = new FormData(event.currentTarget);\n//     console.log({\n//       email: data.get('email'),\n//       password: data.get('password'),\n//     });\n//   };\n\n//   const validateInputs = () => {\n//     const email = document.getElementById('email') as HTMLInputElement;\n//     const password = document.getElementById('password') as HTMLInputElement;\n\n//     let isValid = true;\n\n//     if (!email.value || !/\\S+@\\S+\\.\\S+/.test(email.value)) {\n//       setEmailError(true);\n//       setEmailErrorMessage('Please enter a valid email address.');\n//       isValid = false;\n//     } else {\n//       setEmailError(false);\n//       setEmailErrorMessage('');\n//     }\n\n//     if (!password.value || password.value.length < 6) {\n//       setPasswordError(true);\n//       setPasswordErrorMessage('Password must be at least 6 characters long.');\n//       isValid = false;\n//     } else {\n//       setPasswordError(false);\n//       setPasswordErrorMessage('');\n//     }\n\n//     return isValid;\n//   };\n\n//   return (\n//     <AppTheme {...props}>\n//       <CssBaseline enableColorScheme />\n//       <SignInContainer direction=\"column\" justifyContent=\"space-between\">\n//         <Card>\n//           <Typography\n//             component=\"h1\"\n//             variant=\"h4\"\n//             sx={{ width: '100%', fontSize: 'clamp(2rem, 10vw, 2.15rem)' }}\n//           >\n//             Sign in\n//           </Typography>\n//           <Box\n//             component=\"form\"\n//             onSubmit={handleSubmit}\n//             noValidate\n//             sx={{\n//               display: 'flex',\n//               flexDirection: 'column',\n//               width: '100%',\n//               gap: 2,\n//             }}\n//           >\n//             <FormControl>\n//               <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n//                 <FormLabel htmlFor=\"email\">Email</FormLabel>\n//               </Box>\n//               <TextField\n//                 error={emailError}\n//                 helperText={emailErrorMessage}\n//                 id=\"email\"\n//                 type=\"email\"\n//                 name=\"email\"\n//                 placeholder=\"your@email.com\"\n//                 autoComplete=\"email\"\n//                 autoFocus\n//                 required\n//                 fullWidth\n//                 variant=\"outlined\"\n//                 color={emailError ? 'error' : 'primary'}\n//                 sx={{ ariaLabel: 'email' }}\n//               />\n//             </FormControl>\n\n//             <FormControl>\n//               <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\n//                 <FormLabel htmlFor=\"password\">Password</FormLabel>\n//                 <Link\n//                   component=\"button\"\n//                   type=\"button\"\n//                   onClick={handleClickOpen}\n//                   variant=\"body2\"\n//                   sx={{ alignSelf: 'baseline' }}\n//                 >\n//                   Forgot your password?\n//                 </Link>\n//               </Box>\n//               <TextField\n//                 error={passwordError}\n//                 helperText={passwordErrorMessage}\n//                 name=\"password\"\n//                 placeholder=\"••••••\"\n//                 type=\"password\"\n//                 id=\"password\"\n//                 autoComplete=\"current-password\"\n//                 required\n//                 fullWidth\n//                 variant=\"outlined\"\n//                 color={passwordError ? 'error' : 'primary'}\n//               />\n//             </FormControl>\n//             <FormControlLabel\n//               control={<Checkbox value=\"remember\" color=\"primary\" />}\n//               label=\"Remember me\"\n//             />\n//             <ForgotPassword open={open} handleClose={handleClose} />\n//             <Button\n//               type=\"submit\"\n//               fullWidth\n//               variant=\"contained\"\n//               onClick={validateInputs}\n//             >\n//               Sign in\n//             </Button>\n//             <Typography sx={{ textAlign: 'center' }}>\n//               Don&apos;t have an account?{' '}\n//               <span>\n//                 <Link\n//                   href=\"/sign-up\"\n//                   variant=\"body2\"\n//                   sx={{ alignSelf: 'center' }}\n//                 >\n//                   Sign up\n//                 </Link>\n//               </span>\n//             </Typography>\n//           </Box>\n//         </Card>\n//       </SignInContainer>\n//     </AppTheme>\n//   );\n// };\n\n// export default SignIn;\n\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Checkbox from '@mui/material/Checkbox';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormLabel from '@mui/material/FormLabel';\nimport FormControl from '@mui/material/FormControl';\nimport Link from '@mui/material/Link';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport Stack from '@mui/material/Stack';\nimport MuiCard from '@mui/material/Card';\nimport { styled } from '@mui/material/styles';\nimport ForgotPassword from './ForgotPassword';\nimport AppTheme from '../shared-theme/AppTheme';\nimport { SignInUser } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Card = styled(MuiCard)(({\n  theme\n}) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  alignSelf: 'center',\n  width: '200%',\n  padding: theme.spacing(4),\n  gap: theme.spacing(2),\n  [theme.breakpoints.up('sm')]: {\n    maxWidth: '450px'\n  },\n  boxShadow: 'hsla(220, 30%, 5%, 0.05) 0px 5px 15px 0px, hsla(220, 25%, 10%, 0.05) 0px 15px 35px -5px',\n  ...theme.applyStyles('dark', {\n    boxShadow: 'hsla(220, 30%, 5%, 0.5) 0px 5px 15px 0px, hsla(220, 25%, 10%, 0.08) 0px 15px 35px -5px'\n  })\n}));\n_c = Card;\nconst SignInContainer = styled(Stack)(({\n  theme\n}) => ({\n  minHeight: '100%',\n  padding: theme.spacing(2),\n  [theme.breakpoints.up('sm')]: {\n    padding: theme.spacing(4)\n  },\n  '&::before': {\n    content: '\"\"',\n    display: 'block',\n    position: 'absolute',\n    zIndex: -1,\n    inset: 0,\n    backgroundImage: 'radial-gradient(ellipse at 50% 50%, hsl(210, 100%, 97%), hsl(0, 0%, 100%))',\n    backgroundRepeat: 'no-repeat',\n    ...theme.applyStyles('dark', {\n      backgroundImage: 'radial-gradient(at 50% 50%, hsla(210, 100%, 16%, 0.5), hsl(220, 30%, 5%))'\n    })\n  }\n}));\n_c2 = SignInContainer;\nconst SignIn = props => {\n  _s();\n  const [emailError, setEmailError] = React.useState(false);\n  const [emailErrorMessage, setEmailErrorMessage] = React.useState('');\n  const [passwordError, setPasswordError] = React.useState(false);\n  const [passwordErrorMessage, setPasswordErrorMessage] = React.useState('');\n  const [open, setOpen] = React.useState(false);\n  const [signInMessage, setSignInMessage] = React.useState(''); // State for sign in message\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!validateInputs()) {\n      return;\n    }\n    const data = new FormData(event.currentTarget);\n    const email = data.get('email');\n    const password = data.get('password');\n    const token = ''; // Replace this with your actual token logic if needed\n\n    const message = await SignInUser(email, password, token);\n    setSignInMessage(message);\n    console.log(message);\n  };\n  const validateInputs = () => {\n    const email = document.getElementById('email');\n    const password = document.getElementById('password');\n    let isValid = true;\n    if (!email.value || !/\\S+@\\S+\\.\\S+/.test(email.value)) {\n      setEmailError(true);\n      setEmailErrorMessage('Please enter a valid email address.');\n      isValid = false;\n    } else {\n      setEmailError(false);\n      setEmailErrorMessage('');\n    }\n    if (!password.value || password.value.length < 6) {\n      setPasswordError(true);\n      setPasswordErrorMessage('Password must be at least 6 characters long.');\n      isValid = false;\n    } else {\n      setPasswordError(false);\n      setPasswordErrorMessage('');\n    }\n    return isValid;\n  };\n  return /*#__PURE__*/_jsxDEV(AppTheme, {\n    ...props,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {\n      enableColorScheme: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SignInContainer, {\n      direction: \"column\",\n      justifyContent: \"space-between\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h4\",\n          sx: {\n            width: '100%',\n            fontSize: 'clamp(2rem, 10vw, 2.15rem)'\n          },\n          children: \"Sign in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          component: \"form\",\n          onSubmit: handleSubmit,\n          noValidate: true,\n          sx: {\n            display: 'flex',\n            flexDirection: 'column',\n            width: '100%',\n            gap: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center'\n              },\n              children: /*#__PURE__*/_jsxDEV(FormLabel, {\n                htmlFor: \"email\",\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              error: emailError,\n              helperText: emailErrorMessage,\n              id: \"email\",\n              type: \"email\",\n              name: \"email\",\n              placeholder: \"your@email.com\",\n              autoComplete: \"email\",\n              autoFocus: true,\n              required: true,\n              fullWidth: true,\n              variant: \"outlined\",\n              color: emailError ? 'error' : 'primary',\n              sx: {\n                ariaLabel: 'email'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                justifyContent: 'space-between'\n              },\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                htmlFor: \"password\",\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 388,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                component: \"button\",\n                type: \"button\",\n                onClick: handleClickOpen,\n                variant: \"body2\",\n                sx: {\n                  alignSelf: 'baseline'\n                },\n                children: \"Forgot your password?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 389,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              error: passwordError,\n              helperText: passwordErrorMessage,\n              name: \"password\",\n              placeholder: \"\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\",\n              type: \"password\",\n              id: \"password\",\n              autoComplete: \"current-password\",\n              required: true,\n              fullWidth: true,\n              variant: \"outlined\",\n              color: passwordError ? 'error' : 'primary'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {\n              value: \"remember\",\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 24\n            }, this),\n            label: \"Remember me\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ForgotPassword, {\n            open: open,\n            handleClose: handleClose\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            fullWidth: true,\n            variant: \"contained\",\n            children: \"Sign in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 13\n          }, this), signInMessage && /*#__PURE__*/_jsxDEV(Typography, {\n            sx: {\n              textAlign: 'center',\n              color: 'error.main'\n            },\n            children: signInMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            sx: {\n              textAlign: 'center'\n            },\n            children: [\"Don't have an account?\", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                href: \"/sign-up\",\n                variant: \"body2\",\n                sx: {\n                  alignSelf: 'center'\n                },\n                children: \"Sign up\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 343,\n    columnNumber: 5\n  }, this);\n};\n_s(SignIn, \"RcssO3TONPY3aA+prhPpOTvCH9A=\");\n_c3 = SignIn;\nexport default SignIn;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Card\");\n$RefreshReg$(_c2, \"SignInContainer\");\n$RefreshReg$(_c3, \"SignIn\");","map":{"version":3,"names":["React","Box","Button","Checkbox","CssBaseline","FormControlLabel","FormLabel","FormControl","Link","TextField","Typography","Stack","MuiCard","styled","ForgotPassword","AppTheme","SignInUser","jsxDEV","_jsxDEV","Card","theme","display","flexDirection","alignSelf","width","padding","spacing","gap","breakpoints","up","maxWidth","boxShadow","applyStyles","_c","SignInContainer","minHeight","content","position","zIndex","inset","backgroundImage","backgroundRepeat","_c2","SignIn","props","_s","emailError","setEmailError","useState","emailErrorMessage","setEmailErrorMessage","passwordError","setPasswordError","passwordErrorMessage","setPasswordErrorMessage","open","setOpen","signInMessage","setSignInMessage","handleClickOpen","handleClose","handleSubmit","event","preventDefault","validateInputs","data","FormData","currentTarget","email","get","password","token","message","console","log","document","getElementById","isValid","value","test","length","children","enableColorScheme","fileName","_jsxFileName","lineNumber","columnNumber","direction","justifyContent","component","variant","sx","fontSize","onSubmit","noValidate","alignItems","htmlFor","error","helperText","id","type","name","placeholder","autoComplete","autoFocus","required","fullWidth","color","ariaLabel","onClick","control","label","textAlign","href","_c3","$RefreshReg$"],"sources":["C:/Users/Raluca.Sodinca/Disertatie2/frontend/src/sign-in/SignIn.tsx"],"sourcesContent":["// import * as React from 'react';\r\n// import Box from '@mui/material/Box';\r\n// import Button from '@mui/material/Button';\r\n// import Checkbox from '@mui/material/Checkbox';\r\n// import CssBaseline from '@mui/material/CssBaseline';\r\n// import FormControlLabel from '@mui/material/FormControlLabel';\r\n// import FormLabel from '@mui/material/FormLabel';\r\n// import FormControl from '@mui/material/FormControl';\r\n// import Link from '@mui/material/Link';\r\n// import TextField from '@mui/material/TextField';\r\n// import Typography from '@mui/material/Typography';\r\n// import Stack from '@mui/material/Stack';\r\n// import MuiCard from '@mui/material/Card';\r\n// import { styled } from '@mui/material/styles';\r\n// import ForgotPassword from './ForgotPassword';\r\n// import AppTheme from '../shared-theme/AppTheme';\r\n\r\n// const Card = styled(MuiCard)(({ theme }) => ({\r\n//   display: 'flex',\r\n//   flexDirection: 'column',\r\n//   alignSelf: 'center',\r\n//   width: '200%',\r\n//   padding: theme.spacing(4),\r\n//   gap: theme.spacing(2),\r\n//   [theme.breakpoints.up('sm')]: {\r\n//     maxWidth: '450px',\r\n//   },\r\n//   boxShadow:\r\n//     'hsla(220, 30%, 5%, 0.05) 0px 5px 15px 0px, hsla(220, 25%, 10%, 0.05) 0px 15px 35px -5px',\r\n//   ...theme.applyStyles('dark', {\r\n//     boxShadow:\r\n//       'hsla(220, 30%, 5%, 0.5) 0px 5px 15px 0px, hsla(220, 25%, 10%, 0.08) 0px 15px 35px -5px',\r\n//   }),\r\n// }));\r\n\r\n// const SignInContainer = styled(Stack)(({ theme }) => ({\r\n//   minHeight: '100%',\r\n//   padding: theme.spacing(2),\r\n//   [theme.breakpoints.up('sm')]: {\r\n//     padding: theme.spacing(4),\r\n//   },\r\n//   '&::before': {\r\n//     content: '\"\"',\r\n//     display: 'block',\r\n//     position: 'absolute',\r\n//     zIndex: -1,\r\n//     inset: 0,\r\n//     backgroundImage:\r\n//       'radial-gradient(ellipse at 50% 50%, hsl(210, 100%, 97%), hsl(0, 0%, 100%))',\r\n//     backgroundRepeat: 'no-repeat',\r\n//     ...theme.applyStyles('dark', {\r\n//       backgroundImage:\r\n//         'radial-gradient(at 50% 50%, hsla(210, 100%, 16%, 0.5), hsl(220, 30%, 5%))',\r\n//     }),\r\n//   },\r\n// }));\r\n\r\n// interface SignInProps {\r\n//   // Define props if needed\r\n// }\r\n\r\n// const SignIn: React.FC<SignInProps> = (props) => {\r\n//   const [emailError, setEmailError] = React.useState<boolean>(false);\r\n//   const [emailErrorMessage, setEmailErrorMessage] = React.useState<string>('');\r\n//   const [passwordError, setPasswordError] = React.useState<boolean>(false);\r\n//   const [passwordErrorMessage, setPasswordErrorMessage] = React.useState<string>('');\r\n//   const [open, setOpen] = React.useState<boolean>(false);\r\n\r\n//   const handleClickOpen = () => {\r\n//     setOpen(true);\r\n//   };\r\n\r\n//   const handleClose = () => {\r\n//     setOpen(false);\r\n//   };\r\n\r\n//   const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n//     event.preventDefault();\r\n//     if (emailError || passwordError) {\r\n//       return;\r\n//     }\r\n//     const data = new FormData(event.currentTarget);\r\n//     console.log({\r\n//       email: data.get('email'),\r\n//       password: data.get('password'),\r\n//     });\r\n//   };\r\n\r\n//   const validateInputs = () => {\r\n//     const email = document.getElementById('email') as HTMLInputElement;\r\n//     const password = document.getElementById('password') as HTMLInputElement;\r\n\r\n//     let isValid = true;\r\n\r\n//     if (!email.value || !/\\S+@\\S+\\.\\S+/.test(email.value)) {\r\n//       setEmailError(true);\r\n//       setEmailErrorMessage('Please enter a valid email address.');\r\n//       isValid = false;\r\n//     } else {\r\n//       setEmailError(false);\r\n//       setEmailErrorMessage('');\r\n//     }\r\n\r\n//     if (!password.value || password.value.length < 6) {\r\n//       setPasswordError(true);\r\n//       setPasswordErrorMessage('Password must be at least 6 characters long.');\r\n//       isValid = false;\r\n//     } else {\r\n//       setPasswordError(false);\r\n//       setPasswordErrorMessage('');\r\n//     }\r\n\r\n//     return isValid;\r\n//   };\r\n\r\n//   return (\r\n//     <AppTheme {...props}>\r\n//       <CssBaseline enableColorScheme />\r\n//       <SignInContainer direction=\"column\" justifyContent=\"space-between\">\r\n//         <Card>\r\n//           <Typography\r\n//             component=\"h1\"\r\n//             variant=\"h4\"\r\n//             sx={{ width: '100%', fontSize: 'clamp(2rem, 10vw, 2.15rem)' }}\r\n//           >\r\n//             Sign in\r\n//           </Typography>\r\n//           <Box\r\n//             component=\"form\"\r\n//             onSubmit={handleSubmit}\r\n//             noValidate\r\n//             sx={{\r\n//               display: 'flex',\r\n//               flexDirection: 'column',\r\n//               width: '100%',\r\n//               gap: 2,\r\n//             }}\r\n//           >\r\n//             <FormControl>\r\n//               <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n//                 <FormLabel htmlFor=\"email\">Email</FormLabel>\r\n//               </Box>\r\n//               <TextField\r\n//                 error={emailError}\r\n//                 helperText={emailErrorMessage}\r\n//                 id=\"email\"\r\n//                 type=\"email\"\r\n//                 name=\"email\"\r\n//                 placeholder=\"your@email.com\"\r\n//                 autoComplete=\"email\"\r\n//                 autoFocus\r\n//                 required\r\n//                 fullWidth\r\n//                 variant=\"outlined\"\r\n//                 color={emailError ? 'error' : 'primary'}\r\n//                 sx={{ ariaLabel: 'email' }}\r\n//               />\r\n//             </FormControl>\r\n\r\n//             <FormControl>\r\n//               <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\r\n//                 <FormLabel htmlFor=\"password\">Password</FormLabel>\r\n//                 <Link\r\n//                   component=\"button\"\r\n//                   type=\"button\"\r\n//                   onClick={handleClickOpen}\r\n//                   variant=\"body2\"\r\n//                   sx={{ alignSelf: 'baseline' }}\r\n//                 >\r\n//                   Forgot your password?\r\n//                 </Link>\r\n//               </Box>\r\n//               <TextField\r\n//                 error={passwordError}\r\n//                 helperText={passwordErrorMessage}\r\n//                 name=\"password\"\r\n//                 placeholder=\"••••••\"\r\n//                 type=\"password\"\r\n//                 id=\"password\"\r\n//                 autoComplete=\"current-password\"\r\n//                 required\r\n//                 fullWidth\r\n//                 variant=\"outlined\"\r\n//                 color={passwordError ? 'error' : 'primary'}\r\n//               />\r\n//             </FormControl>\r\n//             <FormControlLabel\r\n//               control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n//               label=\"Remember me\"\r\n//             />\r\n//             <ForgotPassword open={open} handleClose={handleClose} />\r\n//             <Button\r\n//               type=\"submit\"\r\n//               fullWidth\r\n//               variant=\"contained\"\r\n//               onClick={validateInputs}\r\n//             >\r\n//               Sign in\r\n//             </Button>\r\n//             <Typography sx={{ textAlign: 'center' }}>\r\n//               Don&apos;t have an account?{' '}\r\n//               <span>\r\n//                 <Link\r\n//                   href=\"/sign-up\"\r\n//                   variant=\"body2\"\r\n//                   sx={{ alignSelf: 'center' }}\r\n//                 >\r\n//                   Sign up\r\n//                 </Link>\r\n//               </span>\r\n//             </Typography>\r\n//           </Box>\r\n//         </Card>\r\n//       </SignInContainer>\r\n//     </AppTheme>\r\n//   );\r\n// };\r\n\r\n// export default SignIn;\r\n\r\nimport * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Link from '@mui/material/Link';\r\nimport TextField from '@mui/material/TextField';\r\nimport Typography from '@mui/material/Typography';\r\nimport Stack from '@mui/material/Stack';\r\nimport MuiCard from '@mui/material/Card';\r\nimport { styled } from '@mui/material/styles';\r\nimport ForgotPassword from './ForgotPassword';\r\nimport AppTheme from '../shared-theme/AppTheme';\r\nimport { SignInUser } from '../services/api';\r\n\r\nconst Card = styled(MuiCard)(({ theme }) => ({\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignSelf: 'center',\r\n  width: '200%',\r\n  padding: theme.spacing(4),\r\n  gap: theme.spacing(2),\r\n  [theme.breakpoints.up('sm')]: {\r\n    maxWidth: '450px',\r\n  },\r\n  boxShadow:\r\n    'hsla(220, 30%, 5%, 0.05) 0px 5px 15px 0px, hsla(220, 25%, 10%, 0.05) 0px 15px 35px -5px',\r\n  ...theme.applyStyles('dark', {\r\n    boxShadow:\r\n      'hsla(220, 30%, 5%, 0.5) 0px 5px 15px 0px, hsla(220, 25%, 10%, 0.08) 0px 15px 35px -5px',\r\n  }),\r\n}));\r\n\r\nconst SignInContainer = styled(Stack)(({ theme }) => ({\r\n  minHeight: '100%',\r\n  padding: theme.spacing(2),\r\n  [theme.breakpoints.up('sm')]: {\r\n    padding: theme.spacing(4),\r\n  },\r\n  '&::before': {\r\n    content: '\"\"',\r\n    display: 'block',\r\n    position: 'absolute',\r\n    zIndex: -1,\r\n    inset: 0,\r\n    backgroundImage:\r\n      'radial-gradient(ellipse at 50% 50%, hsl(210, 100%, 97%), hsl(0, 0%, 100%))',\r\n    backgroundRepeat: 'no-repeat',\r\n    ...theme.applyStyles('dark', {\r\n      backgroundImage:\r\n        'radial-gradient(at 50% 50%, hsla(210, 100%, 16%, 0.5), hsl(220, 30%, 5%))',\r\n    }),\r\n  },\r\n}));\r\n\r\ninterface SignInProps {\r\n  // Define props if needed\r\n}\r\n\r\nconst SignIn: React.FC<SignInProps> = (props) => {\r\n  const [emailError, setEmailError] = React.useState<boolean>(false);\r\n  const [emailErrorMessage, setEmailErrorMessage] = React.useState<string>('');\r\n  const [passwordError, setPasswordError] = React.useState<boolean>(false);\r\n  const [passwordErrorMessage, setPasswordErrorMessage] = React.useState<string>('');\r\n  const [open, setOpen] = React.useState<boolean>(false);\r\n  const [signInMessage, setSignInMessage] = React.useState<string>(''); // State for sign in message\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    if (!validateInputs()) {\r\n      return;\r\n    }\r\n\r\n    const data = new FormData(event.currentTarget);\r\n    const email = data.get('email') as string;\r\n    const password = data.get('password') as string;\r\n    const token = ''; // Replace this with your actual token logic if needed\r\n\r\n    const message = await SignInUser(email, password, token);\r\n    setSignInMessage(message);\r\n    console.log(message);\r\n  };\r\n\r\n  const validateInputs = () => {\r\n    const email = document.getElementById('email') as HTMLInputElement;\r\n    const password = document.getElementById('password') as HTMLInputElement;\r\n\r\n    let isValid = true;\r\n\r\n    if (!email.value || !/\\S+@\\S+\\.\\S+/.test(email.value)) {\r\n      setEmailError(true);\r\n      setEmailErrorMessage('Please enter a valid email address.');\r\n      isValid = false;\r\n    } else {\r\n      setEmailError(false);\r\n      setEmailErrorMessage('');\r\n    }\r\n\r\n    if (!password.value || password.value.length < 6) {\r\n      setPasswordError(true);\r\n      setPasswordErrorMessage('Password must be at least 6 characters long.');\r\n      isValid = false;\r\n    } else {\r\n      setPasswordError(false);\r\n      setPasswordErrorMessage('');\r\n    }\r\n\r\n    return isValid;\r\n  };\r\n\r\n  return (\r\n    <AppTheme {...props}>\r\n      <CssBaseline enableColorScheme />\r\n      <SignInContainer direction=\"column\" justifyContent=\"space-between\">\r\n        <Card>\r\n          <Typography\r\n            component=\"h1\"\r\n            variant=\"h4\"\r\n            sx={{ width: '100%', fontSize: 'clamp(2rem, 10vw, 2.15rem)' }}\r\n          >\r\n            Sign in\r\n          </Typography>\r\n          <Box\r\n            component=\"form\"\r\n            onSubmit={handleSubmit}\r\n            noValidate\r\n            sx={{\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              width: '100%',\r\n              gap: 2,\r\n            }}\r\n          >\r\n            <FormControl>\r\n              <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                <FormLabel htmlFor=\"email\">Email</FormLabel>\r\n              </Box>\r\n              <TextField\r\n                error={emailError}\r\n                helperText={emailErrorMessage}\r\n                id=\"email\"\r\n                type=\"email\"\r\n                name=\"email\"\r\n                placeholder=\"your@email.com\"\r\n                autoComplete=\"email\"\r\n                autoFocus\r\n                required\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                color={emailError ? 'error' : 'primary'}\r\n                sx={{ ariaLabel: 'email' }}\r\n              />\r\n            </FormControl>\r\n\r\n            <FormControl>\r\n              <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                <FormLabel htmlFor=\"password\">Password</FormLabel>\r\n                <Link\r\n                  component=\"button\"\r\n                  type=\"button\"\r\n                  onClick={handleClickOpen}\r\n                  variant=\"body2\"\r\n                  sx={{ alignSelf: 'baseline' }}\r\n                >\r\n                  Forgot your password?\r\n                </Link>\r\n              </Box>\r\n              <TextField\r\n                error={passwordError}\r\n                helperText={passwordErrorMessage}\r\n                name=\"password\"\r\n                placeholder=\"••••••\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                required\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                color={passwordError ? 'error' : 'primary'}\r\n              />\r\n            </FormControl>\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            />\r\n            <ForgotPassword open={open} handleClose={handleClose} />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n            >\r\n              Sign in\r\n            </Button>\r\n            {signInMessage && (\r\n              <Typography sx={{ textAlign: 'center', color: 'error.main' }}>\r\n                {signInMessage}\r\n              </Typography>\r\n            )}\r\n            <Typography sx={{ textAlign: 'center' }}>\r\n              Don&apos;t have an account?{' '}\r\n              <span>\r\n                <Link\r\n                  href=\"/sign-up\"\r\n                  variant=\"body2\"\r\n                  sx={{ alignSelf: 'center' }}\r\n                >\r\n                  Sign up\r\n                </Link>\r\n              </span>\r\n            </Typography>\r\n          </Box>\r\n        </Card>\r\n      </SignInContainer>\r\n    </AppTheme>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,gBA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}