{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Raluca.Sodinca\\\\Disertatie2\\\\frontend\\\\src\\\\sign-up\\\\SignUp.tsx\",\n  _s = $RefreshSig$();\n// import * as React from 'react';\n// import Box from '@mui/material/Box';\n// import Button from '@mui/material/Button';\n// import Checkbox from '@mui/material/Checkbox';\n// import CssBaseline from '@mui/material/CssBaseline';\n// import FormControlLabel from '@mui/material/FormControlLabel';\n// import FormLabel from '@mui/material/FormLabel';\n// import FormControl from '@mui/material/FormControl';\n// import Link from '@mui/material/Link';\n// import TextField from '@mui/material/TextField';\n// import Typography from '@mui/material/Typography';\n// import Stack from '@mui/material/Stack';\n// import MuiCard from '@mui/material/Card';\n// import { styled } from '@mui/material/styles';\n// import AppTheme from '../shared-theme/AppTheme'; // Asigură-te că calea este corectă\n\n// const Card = styled(MuiCard)(({ theme }) => ({\n//   display: 'flex',\n//   flexDirection: 'column',\n//   alignSelf: 'center',\n//   width: '200%',\n//   padding: theme.spacing(4),\n//   gap: theme.spacing(2),\n//   [theme.breakpoints.up('sm')]: {\n//     maxWidth: '450px',\n//   },\n//   boxShadow:\n//     'hsla(220, 30%, 5%, 0.05) 0px 5px 15px 0px, hsla(220, 25%, 10%, 0.05) 0px 15px 35px -5px',\n//   ...theme.applyStyles('dark', {\n//     boxShadow:\n//       'hsla(220, 30%, 5%, 0.5) 0px 5px 15px 0px, hsla(220, 25%, 10%, 0.08) 0px 15px 35px -5px',\n//   }),\n// }));\n\n// const SignUpContainer = styled(Stack)(({ theme }) => ({\n//   minHeight: '100%',\n//   padding: theme.spacing(2),\n//   [theme.breakpoints.up('sm')]: {\n//     padding: theme.spacing(4),\n//   },\n// }));\n\n// export default function SignUp() {\n//   const [emailError, setEmailError] = React.useState(false);\n//   const [emailErrorMessage, setEmailErrorMessage] = React.useState('');\n//   const [passwordError, setPasswordError] = React.useState(false);\n//   const [passwordErrorMessage, setPasswordErrorMessage] = React.useState('');\n//   const [nameError, setNameError] = React.useState(false);\n//   const [nameErrorMessage, setNameErrorMessage] = React.useState('');\n\n//   const validateInputs = () => {\n//     const email = document.getElementById('email') as HTMLInputElement;\n//     const password = document.getElementById('password') as HTMLInputElement;\n//     const name = document.getElementById('name') as HTMLInputElement;\n\n//     let isValid = true;\n\n//     if (!email.value || !/\\S+@\\S+\\.\\S+/.test(email.value)) {\n//       setEmailError(true);\n//       setEmailErrorMessage('Please enter a valid email address.');\n//       isValid = false;\n//     } else {\n//       setEmailError(false);\n//       setEmailErrorMessage('');\n//     }\n\n//     if (!password.value || password.value.length < 6) {\n//       setPasswordError(true);\n//       setPasswordErrorMessage('Password must be at least 6 characters long.');\n//       isValid = false;\n//     } else {\n//       setPasswordError(false);\n//       setPasswordErrorMessage('');\n//     }\n\n//     if (!name.value || name.value.length < 1) {\n//       setNameError(true);\n//       setNameErrorMessage('Name is required.');\n//       isValid = false;\n//     } else {\n//       setNameError(false);\n//       setNameErrorMessage('');\n//     }\n\n//     return isValid;\n//   };\n\n//   const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n//     event.preventDefault();\n//     if (!validateInputs()) return;\n\n//     const data = new FormData(event.currentTarget);\n//     console.log({\n//       name: data.get('name'),\n//       email: data.get('email'),\n//       password: data.get('password'),\n//     });\n//   };\n\n//   return (\n//     <AppTheme>\n//       <CssBaseline enableColorScheme />\n//       <SignUpContainer direction=\"column\" justifyContent=\"space-between\">\n//         <Card>\n//           <Typography\n//             component=\"h1\"\n//             variant=\"h4\"\n//             sx={{ width: '100%', fontSize: 'clamp(2rem, 10vw, 2.15rem)' }}\n//           >\n//             Sign up\n//           </Typography>\n//           <Box\n//             component=\"form\"\n//             onSubmit={handleSubmit}\n//             noValidate\n//             sx={{\n//               display: 'flex',\n//               flexDirection: 'column',\n//               width: '100%',\n//               gap: 2,\n//             }}\n//           >\n//             <FormControl>\n//               <FormLabel htmlFor=\"name\">Full name</FormLabel>\n//               <TextField\n//                 error={nameError}\n//                 helperText={nameErrorMessage}\n//                 id=\"name\"\n//                 name=\"name\"\n//                 placeholder=\"Jon Snow\"\n//                 required\n//                 fullWidth\n//                 variant=\"outlined\"\n//                 color={nameError ? 'error' : 'primary'}\n//               />\n//             </FormControl>\n//             <FormControl>\n//               <FormLabel htmlFor=\"email\">Email</FormLabel>\n//               <TextField\n//                 error={emailError}\n//                 helperText={emailErrorMessage}\n//                 id=\"email\"\n//                 type=\"email\"\n//                 name=\"email\"\n//                 placeholder=\"your@email.com\"\n//                 required\n//                 fullWidth\n//                 variant=\"outlined\"\n//                 color={emailError ? 'error' : 'primary'}\n//               />\n//             </FormControl>\n//             <FormControl>\n//               <FormLabel htmlFor=\"password\">Password</FormLabel>\n//               <TextField\n//                 error={passwordError}\n//                 helperText={passwordErrorMessage}\n//                 name=\"password\"\n//                 placeholder=\"••••••\"\n//                 type=\"password\"\n//                 id=\"password\"\n//                 required\n//                 fullWidth\n//                 variant=\"outlined\"\n//                 color={passwordError ? 'error' : 'primary'}\n//               />\n//             </FormControl>\n\n//             <Button type=\"submit\" fullWidth variant=\"contained\">\n//               Sign up\n//             </Button>\n//             <Typography sx={{ textAlign: 'center' }}>\n//               Already have an account?{' '}\n//               <span>\n//                 <Link href=\"/\" variant=\"body2\" sx={{ alignSelf: 'center' }}>\n//                   Sign in\n//                 </Link>\n//               </span>\n//             </Typography>\n//           </Box>\n//         </Card>\n//       </SignUpContainer>\n//     </AppTheme>\n//   );\n// }\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport FormLabel from '@mui/material/FormLabel';\nimport FormControl from '@mui/material/FormControl';\nimport Link from '@mui/material/Link';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport Stack from '@mui/material/Stack';\nimport MuiCard from '@mui/material/Card';\nimport { styled } from '@mui/material/styles';\nimport AppTheme from '../shared-theme/AppTheme'; // Asigură-te că calea este corectă\nimport { SignUpUser } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Card = styled(MuiCard)(({\n  theme\n}) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  alignSelf: 'center',\n  width: '200%',\n  padding: theme.spacing(4),\n  gap: theme.spacing(2),\n  [theme.breakpoints.up('sm')]: {\n    maxWidth: '450px'\n  },\n  boxShadow: 'hsla(220, 30%, 5%, 0.05) 0px 5px 15px 0px, hsla(220, 25%, 10%, 0.05) 0px 15px 35px -5px',\n  ...theme.applyStyles('dark', {\n    boxShadow: 'hsla(220, 30%, 5%, 0.5) 0px 5px 15px 0px, hsla(220, 25%, 10%, 0.08) 0px 15px 35px -5px'\n  })\n}));\n_c = Card;\nconst SignUpContainer = styled(Stack)(({\n  theme\n}) => ({\n  minHeight: '100%',\n  padding: theme.spacing(2),\n  [theme.breakpoints.up('sm')]: {\n    padding: theme.spacing(4)\n  }\n}));\n_c2 = SignUpContainer;\nexport default function SignUp() {\n  _s();\n  const [emailError, setEmailError] = React.useState(false);\n  const [emailErrorMessage, setEmailErrorMessage] = React.useState('');\n  const [passwordError, setPasswordError] = React.useState(false);\n  const [passwordErrorMessage, setPasswordErrorMessage] = React.useState('');\n  const [nameError, setNameError] = React.useState(false);\n  const [nameErrorMessage, setNameErrorMessage] = React.useState('');\n  const [signupMessage, setSignupMessage] = React.useState('');\n  const validateInputs = () => {\n    const email = document.getElementById('email');\n    const password = document.getElementById('password');\n    const name = document.getElementById('name');\n    let isValid = true;\n    if (!email.value || !/\\S+@\\S+\\.\\S+/.test(email.value)) {\n      setEmailError(true);\n      setEmailErrorMessage('Please enter a valid email address.');\n      isValid = false;\n    } else {\n      setEmailError(false);\n      setEmailErrorMessage('');\n    }\n    if (!password.value || password.value.length < 6) {\n      setPasswordError(true);\n      setPasswordErrorMessage('Password must be at least 6 characters long.');\n      isValid = false;\n    } else {\n      setPasswordError(false);\n      setPasswordErrorMessage('');\n    }\n    if (!name.value || name.value.length < 1) {\n      setNameError(true);\n      setNameErrorMessage('Name is required.');\n      isValid = false;\n    } else {\n      setNameError(false);\n      setNameErrorMessage('');\n    }\n    return isValid;\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!validateInputs()) return;\n    const data = new FormData(event.currentTarget);\n    const name = data.get('name');\n    const email = data.get('email');\n    const password = data.get('password');\n    const token = 'yourTokenHere'; // Asigură-te că ai un token valid, sau gestionează-l în mod corespunzător\n\n    const result = await SignUpUser(email, password, token);\n    setSignupMessage(result); // Afișează mesajul rezultat (succes sau eroare)\n  };\n  return /*#__PURE__*/_jsxDEV(AppTheme, {\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {\n      enableColorScheme: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SignUpContainer, {\n      direction: \"column\",\n      justifyContent: \"space-between\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h4\",\n          sx: {\n            width: '100%',\n            fontSize: 'clamp(2rem, 10vw, 2.15rem)'\n          },\n          children: \"Sign up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          component: \"form\",\n          onSubmit: handleSubmit,\n          noValidate: true,\n          sx: {\n            display: 'flex',\n            flexDirection: 'column',\n            width: '100%',\n            gap: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              htmlFor: \"name\",\n              children: \"Full name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              error: nameError,\n              helperText: nameErrorMessage,\n              id: \"name\",\n              name: \"name\",\n              placeholder: \"Jon Snow\",\n              required: true,\n              fullWidth: true,\n              variant: \"outlined\",\n              color: nameError ? 'error' : 'primary'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              htmlFor: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              error: emailError,\n              helperText: emailErrorMessage,\n              id: \"email\",\n              type: \"email\",\n              name: \"email\",\n              placeholder: \"your@email.com\",\n              required: true,\n              fullWidth: true,\n              variant: \"outlined\",\n              color: emailError ? 'error' : 'primary'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              htmlFor: \"password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              error: passwordError,\n              helperText: passwordErrorMessage,\n              name: \"password\",\n              placeholder: \"\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\",\n              type: \"password\",\n              id: \"password\",\n              required: true,\n              fullWidth: true,\n              variant: \"outlined\",\n              color: passwordError ? 'error' : 'primary'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            fullWidth: true,\n            variant: \"contained\",\n            children: \"Sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 13\n          }, this), signupMessage && /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"primary\",\n            sx: {\n              textAlign: 'center'\n            },\n            children: signupMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            sx: {\n              textAlign: 'center'\n            },\n            children: [\"Already have an account?\", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                href: \"/\",\n                variant: \"body2\",\n                sx: {\n                  alignSelf: 'center'\n                },\n                children: \"Sign in\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 290,\n    columnNumber: 5\n  }, this);\n}\n_s(SignUp, \"mdxz7Lfjxn99edoHDZGwbUxrkIc=\");\n_c3 = SignUp;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Card\");\n$RefreshReg$(_c2, \"SignUpContainer\");\n$RefreshReg$(_c3, \"SignUp\");","map":{"version":3,"names":["React","Box","Button","CssBaseline","FormLabel","FormControl","Link","TextField","Typography","Stack","MuiCard","styled","AppTheme","SignUpUser","jsxDEV","_jsxDEV","Card","theme","display","flexDirection","alignSelf","width","padding","spacing","gap","breakpoints","up","maxWidth","boxShadow","applyStyles","_c","SignUpContainer","minHeight","_c2","SignUp","_s","emailError","setEmailError","useState","emailErrorMessage","setEmailErrorMessage","passwordError","setPasswordError","passwordErrorMessage","setPasswordErrorMessage","nameError","setNameError","nameErrorMessage","setNameErrorMessage","signupMessage","setSignupMessage","validateInputs","email","document","getElementById","password","name","isValid","value","test","length","handleSubmit","event","preventDefault","data","FormData","currentTarget","get","token","result","children","enableColorScheme","fileName","_jsxFileName","lineNumber","columnNumber","direction","justifyContent","component","variant","sx","fontSize","onSubmit","noValidate","htmlFor","error","helperText","id","placeholder","required","fullWidth","color","type","textAlign","href","_c3","$RefreshReg$"],"sources":["C:/Users/Raluca.Sodinca/Disertatie2/frontend/src/sign-up/SignUp.tsx"],"sourcesContent":["// import * as React from 'react';\r\n// import Box from '@mui/material/Box';\r\n// import Button from '@mui/material/Button';\r\n// import Checkbox from '@mui/material/Checkbox';\r\n// import CssBaseline from '@mui/material/CssBaseline';\r\n// import FormControlLabel from '@mui/material/FormControlLabel';\r\n// import FormLabel from '@mui/material/FormLabel';\r\n// import FormControl from '@mui/material/FormControl';\r\n// import Link from '@mui/material/Link';\r\n// import TextField from '@mui/material/TextField';\r\n// import Typography from '@mui/material/Typography';\r\n// import Stack from '@mui/material/Stack';\r\n// import MuiCard from '@mui/material/Card';\r\n// import { styled } from '@mui/material/styles';\r\n// import AppTheme from '../shared-theme/AppTheme'; // Asigură-te că calea este corectă\r\n\r\n// const Card = styled(MuiCard)(({ theme }) => ({\r\n//   display: 'flex',\r\n//   flexDirection: 'column',\r\n//   alignSelf: 'center',\r\n//   width: '200%',\r\n//   padding: theme.spacing(4),\r\n//   gap: theme.spacing(2),\r\n//   [theme.breakpoints.up('sm')]: {\r\n//     maxWidth: '450px',\r\n//   },\r\n//   boxShadow:\r\n//     'hsla(220, 30%, 5%, 0.05) 0px 5px 15px 0px, hsla(220, 25%, 10%, 0.05) 0px 15px 35px -5px',\r\n//   ...theme.applyStyles('dark', {\r\n//     boxShadow:\r\n//       'hsla(220, 30%, 5%, 0.5) 0px 5px 15px 0px, hsla(220, 25%, 10%, 0.08) 0px 15px 35px -5px',\r\n//   }),\r\n// }));\r\n\r\n// const SignUpContainer = styled(Stack)(({ theme }) => ({\r\n//   minHeight: '100%',\r\n//   padding: theme.spacing(2),\r\n//   [theme.breakpoints.up('sm')]: {\r\n//     padding: theme.spacing(4),\r\n//   },\r\n// }));\r\n\r\n// export default function SignUp() {\r\n//   const [emailError, setEmailError] = React.useState(false);\r\n//   const [emailErrorMessage, setEmailErrorMessage] = React.useState('');\r\n//   const [passwordError, setPasswordError] = React.useState(false);\r\n//   const [passwordErrorMessage, setPasswordErrorMessage] = React.useState('');\r\n//   const [nameError, setNameError] = React.useState(false);\r\n//   const [nameErrorMessage, setNameErrorMessage] = React.useState('');\r\n\r\n//   const validateInputs = () => {\r\n//     const email = document.getElementById('email') as HTMLInputElement;\r\n//     const password = document.getElementById('password') as HTMLInputElement;\r\n//     const name = document.getElementById('name') as HTMLInputElement;\r\n\r\n//     let isValid = true;\r\n\r\n//     if (!email.value || !/\\S+@\\S+\\.\\S+/.test(email.value)) {\r\n//       setEmailError(true);\r\n//       setEmailErrorMessage('Please enter a valid email address.');\r\n//       isValid = false;\r\n//     } else {\r\n//       setEmailError(false);\r\n//       setEmailErrorMessage('');\r\n//     }\r\n\r\n//     if (!password.value || password.value.length < 6) {\r\n//       setPasswordError(true);\r\n//       setPasswordErrorMessage('Password must be at least 6 characters long.');\r\n//       isValid = false;\r\n//     } else {\r\n//       setPasswordError(false);\r\n//       setPasswordErrorMessage('');\r\n//     }\r\n\r\n//     if (!name.value || name.value.length < 1) {\r\n//       setNameError(true);\r\n//       setNameErrorMessage('Name is required.');\r\n//       isValid = false;\r\n//     } else {\r\n//       setNameError(false);\r\n//       setNameErrorMessage('');\r\n//     }\r\n\r\n//     return isValid;\r\n//   };\r\n\r\n//   const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n//     event.preventDefault();\r\n//     if (!validateInputs()) return;\r\n\r\n//     const data = new FormData(event.currentTarget);\r\n//     console.log({\r\n//       name: data.get('name'),\r\n//       email: data.get('email'),\r\n//       password: data.get('password'),\r\n//     });\r\n//   };\r\n\r\n//   return (\r\n//     <AppTheme>\r\n//       <CssBaseline enableColorScheme />\r\n//       <SignUpContainer direction=\"column\" justifyContent=\"space-between\">\r\n//         <Card>\r\n//           <Typography\r\n//             component=\"h1\"\r\n//             variant=\"h4\"\r\n//             sx={{ width: '100%', fontSize: 'clamp(2rem, 10vw, 2.15rem)' }}\r\n//           >\r\n//             Sign up\r\n//           </Typography>\r\n//           <Box\r\n//             component=\"form\"\r\n//             onSubmit={handleSubmit}\r\n//             noValidate\r\n//             sx={{\r\n//               display: 'flex',\r\n//               flexDirection: 'column',\r\n//               width: '100%',\r\n//               gap: 2,\r\n//             }}\r\n//           >\r\n//             <FormControl>\r\n//               <FormLabel htmlFor=\"name\">Full name</FormLabel>\r\n//               <TextField\r\n//                 error={nameError}\r\n//                 helperText={nameErrorMessage}\r\n//                 id=\"name\"\r\n//                 name=\"name\"\r\n//                 placeholder=\"Jon Snow\"\r\n//                 required\r\n//                 fullWidth\r\n//                 variant=\"outlined\"\r\n//                 color={nameError ? 'error' : 'primary'}\r\n//               />\r\n//             </FormControl>\r\n//             <FormControl>\r\n//               <FormLabel htmlFor=\"email\">Email</FormLabel>\r\n//               <TextField\r\n//                 error={emailError}\r\n//                 helperText={emailErrorMessage}\r\n//                 id=\"email\"\r\n//                 type=\"email\"\r\n//                 name=\"email\"\r\n//                 placeholder=\"your@email.com\"\r\n//                 required\r\n//                 fullWidth\r\n//                 variant=\"outlined\"\r\n//                 color={emailError ? 'error' : 'primary'}\r\n//               />\r\n//             </FormControl>\r\n//             <FormControl>\r\n//               <FormLabel htmlFor=\"password\">Password</FormLabel>\r\n//               <TextField\r\n//                 error={passwordError}\r\n//                 helperText={passwordErrorMessage}\r\n//                 name=\"password\"\r\n//                 placeholder=\"••••••\"\r\n//                 type=\"password\"\r\n//                 id=\"password\"\r\n//                 required\r\n//                 fullWidth\r\n//                 variant=\"outlined\"\r\n//                 color={passwordError ? 'error' : 'primary'}\r\n//               />\r\n//             </FormControl>\r\n \r\n//             <Button type=\"submit\" fullWidth variant=\"contained\">\r\n//               Sign up\r\n//             </Button>\r\n//             <Typography sx={{ textAlign: 'center' }}>\r\n//               Already have an account?{' '}\r\n//               <span>\r\n//                 <Link href=\"/\" variant=\"body2\" sx={{ alignSelf: 'center' }}>\r\n//                   Sign in\r\n//                 </Link>\r\n//               </span>\r\n//             </Typography>\r\n//           </Box>\r\n//         </Card>\r\n//       </SignUpContainer>\r\n//     </AppTheme>\r\n//   );\r\n// }\r\nimport * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Link from '@mui/material/Link';\r\nimport TextField from '@mui/material/TextField';\r\nimport Typography from '@mui/material/Typography';\r\nimport Stack from '@mui/material/Stack';\r\nimport MuiCard from '@mui/material/Card';\r\nimport { styled } from '@mui/material/styles';\r\nimport AppTheme from '../shared-theme/AppTheme'; // Asigură-te că calea este corectă\r\nimport { SignUpUser } from '../services/api';\r\n\r\nconst Card = styled(MuiCard)(({ theme }) => ({\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignSelf: 'center',\r\n  width: '200%',\r\n  padding: theme.spacing(4),\r\n  gap: theme.spacing(2),\r\n  [theme.breakpoints.up('sm')]: {\r\n    maxWidth: '450px',\r\n  },\r\n  boxShadow:\r\n    'hsla(220, 30%, 5%, 0.05) 0px 5px 15px 0px, hsla(220, 25%, 10%, 0.05) 0px 15px 35px -5px',\r\n  ...theme.applyStyles('dark', {\r\n    boxShadow:\r\n      'hsla(220, 30%, 5%, 0.5) 0px 5px 15px 0px, hsla(220, 25%, 10%, 0.08) 0px 15px 35px -5px',\r\n  }),\r\n}));\r\n\r\nconst SignUpContainer = styled(Stack)(({ theme }) => ({\r\n  minHeight: '100%',\r\n  padding: theme.spacing(2),\r\n  [theme.breakpoints.up('sm')]: {\r\n    padding: theme.spacing(4),\r\n  },\r\n}));\r\n\r\nexport default function SignUp() {\r\n  const [emailError, setEmailError] = React.useState(false);\r\n  const [emailErrorMessage, setEmailErrorMessage] = React.useState('');\r\n  const [passwordError, setPasswordError] = React.useState(false);\r\n  const [passwordErrorMessage, setPasswordErrorMessage] = React.useState('');\r\n  const [nameError, setNameError] = React.useState(false);\r\n  const [nameErrorMessage, setNameErrorMessage] = React.useState('');\r\n  const [signupMessage, setSignupMessage] = React.useState('');\r\n\r\n  const validateInputs = () => {\r\n    const email = document.getElementById('email') as HTMLInputElement;\r\n    const password = document.getElementById('password') as HTMLInputElement;\r\n    const name = document.getElementById('name') as HTMLInputElement;\r\n\r\n    let isValid = true;\r\n\r\n    if (!email.value || !/\\S+@\\S+\\.\\S+/.test(email.value)) {\r\n      setEmailError(true);\r\n      setEmailErrorMessage('Please enter a valid email address.');\r\n      isValid = false;\r\n    } else {\r\n      setEmailError(false);\r\n      setEmailErrorMessage('');\r\n    }\r\n\r\n    if (!password.value || password.value.length < 6) {\r\n      setPasswordError(true);\r\n      setPasswordErrorMessage('Password must be at least 6 characters long.');\r\n      isValid = false;\r\n    } else {\r\n      setPasswordError(false);\r\n      setPasswordErrorMessage('');\r\n    }\r\n\r\n    if (!name.value || name.value.length < 1) {\r\n      setNameError(true);\r\n      setNameErrorMessage('Name is required.');\r\n      isValid = false;\r\n    } else {\r\n      setNameError(false);\r\n      setNameErrorMessage('');\r\n    }\r\n\r\n    return isValid;\r\n  };\r\n\r\n  const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    if (!validateInputs()) return;\r\n\r\n    const data = new FormData(event.currentTarget);\r\n    const name = data.get('name') as string;\r\n    const email = data.get('email') as string;\r\n    const password = data.get('password') as string;\r\n\r\n    const token = 'yourTokenHere'; // Asigură-te că ai un token valid, sau gestionează-l în mod corespunzător\r\n\r\n    const result = await SignUpUser(email, password, token);\r\n    setSignupMessage(result); // Afișează mesajul rezultat (succes sau eroare)\r\n  };\r\n\r\n  return (\r\n    <AppTheme>\r\n      <CssBaseline enableColorScheme />\r\n      <SignUpContainer direction=\"column\" justifyContent=\"space-between\">\r\n        <Card>\r\n          <Typography\r\n            component=\"h1\"\r\n            variant=\"h4\"\r\n            sx={{ width: '100%', fontSize: 'clamp(2rem, 10vw, 2.15rem)' }}\r\n          >\r\n            Sign up\r\n          </Typography>\r\n          <Box\r\n            component=\"form\"\r\n            onSubmit={handleSubmit}\r\n            noValidate\r\n            sx={{\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              width: '100%',\r\n              gap: 2,\r\n            }}\r\n          >\r\n            <FormControl>\r\n              <FormLabel htmlFor=\"name\">Full name</FormLabel>\r\n              <TextField\r\n                error={nameError}\r\n                helperText={nameErrorMessage}\r\n                id=\"name\"\r\n                name=\"name\"\r\n                placeholder=\"Jon Snow\"\r\n                required\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                color={nameError ? 'error' : 'primary'}\r\n              />\r\n            </FormControl>\r\n            <FormControl>\r\n              <FormLabel htmlFor=\"email\">Email</FormLabel>\r\n              <TextField\r\n                error={emailError}\r\n                helperText={emailErrorMessage}\r\n                id=\"email\"\r\n                type=\"email\"\r\n                name=\"email\"\r\n                placeholder=\"your@email.com\"\r\n                required\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                color={emailError ? 'error' : 'primary'}\r\n              />\r\n            </FormControl>\r\n            <FormControl>\r\n              <FormLabel htmlFor=\"password\">Password</FormLabel>\r\n              <TextField\r\n                error={passwordError}\r\n                helperText={passwordErrorMessage}\r\n                name=\"password\"\r\n                placeholder=\"••••••\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                required\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                color={passwordError ? 'error' : 'primary'}\r\n              />\r\n            </FormControl>\r\n            <Button type=\"submit\" fullWidth variant=\"contained\">\r\n              Sign up\r\n            </Button>\r\n            {signupMessage && (\r\n              <Typography color=\"primary\" sx={{ textAlign: 'center' }}>\r\n                {signupMessage}\r\n              </Typography>\r\n            )}\r\n            <Typography sx={{ textAlign: 'center' }}>\r\n              Already have an account?{' '}\r\n              <span>\r\n                <Link href=\"/\" variant=\"body2\" sx={{ alignSelf: 'center' }}>\r\n                  Sign in\r\n                </Link>\r\n              </span>\r\n            </Typography>\r\n          </Box>\r\n        </Card>\r\n      </SignUpContainer>\r\n    </AppTheme>\r\n  );\r\n}\r\n\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,MAAM,MAAM,sBAAsB;AAEzC,OAAOC,WAAW,MAAM,2BAA2B;AAEnD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,OAAO,MAAM,oBAAoB;AACxC,SAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}