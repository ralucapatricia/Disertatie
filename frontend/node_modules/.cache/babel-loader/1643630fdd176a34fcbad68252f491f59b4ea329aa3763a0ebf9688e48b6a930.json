{"ast":null,"code":"// import * as React from 'react';\n// import Box from '@mui/material/Box';\n// import Button from '@mui/material/Button';\n// import Checkbox from '@mui/material/Checkbox';\n// import CssBaseline from '@mui/material/CssBaseline';\n// import FormControlLabel from '@mui/material/FormControlLabel';\n// import Divider from '@mui/material/Divider';\n// import FormLabel from '@mui/material/FormLabel';\n// import FormControl from '@mui/material/FormControl';\n// import Link from '@mui/material/Link';\n// import TextField from '@mui/material/TextField';\n// import Typography from '@mui/material/Typography';\n// import Stack from '@mui/material/Stack';\n// import MuiCard from '@mui/material/Card';\n// import { styled } from '@mui/material/styles';\n// import ForgotPassword from './ForgotPassword';\n// import AppTheme from '../shared-theme/AppTheme';\n\n// const Card = styled(MuiCard)(({ theme }) => ({\n//   display: 'flex',\n//   flexDirection: 'column',\n//   alignSelf: 'center',\n//   width: '200%',\n//   padding: theme.spacing(4),\n//   gap: theme.spacing(2),\n// //   margin: 'auto',\n//   [theme.breakpoints.up('sm')]: {\n//     maxWidth: '450px',\n//   },\n//   boxShadow:\n//     'hsla(220, 30%, 5%, 0.05) 0px 5px 15px 0px, hsla(220, 25%, 10%, 0.05) 0px 15px 35px -5px',\n//   ...theme.applyStyles('dark', {\n//     boxShadow:\n//       'hsla(220, 30%, 5%, 0.5) 0px 5px 15px 0px, hsla(220, 25%, 10%, 0.08) 0px 15px 35px -5px',\n//   }),\n// }));\n\n// const SignInContainer = styled(Stack)(({ theme }) => ({\n//   minHeight: '100%',\n//   padding: theme.spacing(2),\n//   [theme.breakpoints.up('sm')]: {\n//     padding: theme.spacing(4),\n//   },\n//   '&::before': {\n//     content: '\"\"',\n//     display: 'block',\n//     position: 'absolute',\n//     zIndex: -1,\n//     inset: 0,\n//     backgroundImage:\n//       'radial-gradient(ellipse at 50% 50%, hsl(210, 100%, 97%), hsl(0, 0%, 100%))',\n//     backgroundRepeat: 'no-repeat',\n//     ...theme.applyStyles('dark', {\n//       backgroundImage:\n//         'radial-gradient(at 50% 50%, hsla(210, 100%, 16%, 0.5), hsl(220, 30%, 5%))',\n//     }),\n//   },\n// }));\n\n// export default function SignIn(props) {\n//   const [emailError, setEmailError] = React.useState(false);\n//   const [emailErrorMessage, setEmailErrorMessage] = React.useState('');\n//   const [passwordError, setPasswordError] = React.useState(false);\n//   const [passwordErrorMessage, setPasswordErrorMessage] = React.useState('');\n//   const [open, setOpen] = React.useState(false);\n\n//   const handleClickOpen = () => {\n//     setOpen(true);\n//   };\n\n//   const handleClose = () => {\n//     setOpen(false);\n//   };\n\n//   const handleSubmit = (event) => {\n//     if (emailError || passwordError) {\n//       event.preventDefault();\n//       return;\n//     }\n//     const data = new FormData(event.currentTarget);\n//     console.log({\n//       email: data.get('email'),\n//       password: data.get('password'),\n//     });\n//   };\n\n//   const validateInputs = () => {\n//     const email = document.getElementById('email');\n//     const password = document.getElementById('password');\n\n//     let isValid = true;\n\n//     if (!email.value || !/\\S+@\\S+\\.\\S+/.test(email.value)) {\n//       setEmailError(true);\n//       setEmailErrorMessage('Please enter a valid email address.');\n//       isValid = false;\n//     } else {\n//       setEmailError(false);\n//       setEmailErrorMessage('');\n//     }\n\n//     if (!password.value || password.value.length < 6) {\n//       setPasswordError(true);\n//       setPasswordErrorMessage('Password must be at least 6 characters long.');\n//       isValid = false;\n//     } else {\n//       setPasswordError(false);\n//       setPasswordErrorMessage('');\n//     }\n\n//     return isValid;\n//   };\n\n//   return (\n//     <AppTheme {...props}>\n//       <CssBaseline enableColorScheme />\n//       <SignInContainer direction=\"column\" justifyContent=\"space-between\">\n//         {/* <ColorModeSelect sx={{ position: 'fixed', top: '1rem', right: '1rem' }} /> */}\n//         <Card>\n//           <Typography\n//             component=\"h1\"\n//             variant=\"h4\"\n//             sx={{ width: '100%', fontSize: 'clamp(2rem, 10vw, 2.15rem)' }}\n//           >\n//             Sign in\n//           </Typography>\n//           <Box\n//             component=\"form\"\n//             onSubmit={handleSubmit}\n//             noValidate\n//             sx={{\n//               display: 'flex',\n//               flexDirection: 'column',\n//               width: '100%',\n//               gap: 2,\n//             }}\n//           >\n//      <FormControl>\n//   <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n//     <FormLabel htmlFor=\"email\">Email</FormLabel>\n//   </Box>\n//   <TextField\n//     error={emailError}\n//     helperText={emailErrorMessage}\n//     id=\"email\"\n//     type=\"email\"\n//     name=\"email\"\n//     placeholder=\"your@email.com\"\n//     autoComplete=\"email\"\n//     autoFocus\n//     required\n//     fullWidth\n//     variant=\"outlined\"\n//     color={emailError ? 'error' : 'primary'}\n//     sx={{ ariaLabel: 'email' }}\n//   />\n// </FormControl>\n\n//             <FormControl>\n//               <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\n//                 <FormLabel htmlFor=\"password\">Password</FormLabel>\n//                 <Link\n//                   component=\"button\"\n//                   type=\"button\"\n//                   onClick={handleClickOpen}\n//                   variant=\"body2\"\n//                   sx={{ alignSelf: 'baseline' }}\n//                 >\n//                   Forgot your password?\n//                 </Link>\n//               </Box>\n//               <TextField\n//                 error={passwordError}\n//                 helperText={passwordErrorMessage}\n//                 name=\"password\"\n//                 placeholder=\"••••••\"\n//                 type=\"password\"\n//                 id=\"password\"\n//                 autoComplete=\"current-password\"\n//                 autoFocus\n//                 required\n//                 fullWidth\n//                 variant=\"outlined\"\n//                 color={passwordError ? 'error' : 'primary'}\n//               />\n//             </FormControl>\n//             <FormControlLabel\n//               control={<Checkbox value=\"remember\" color=\"primary\" />}\n//               label=\"Remember me\"\n//             />\n//             <ForgotPassword open={open} handleClose={handleClose} />\n//             <Button\n//               type=\"submit\"\n//               fullWidth\n//               variant=\"contained\"\n//               onClick={validateInputs}\n//             >\n//               Sign in\n//             </Button>\n//             <Typography sx={{ textAlign: 'center' }}>\n//               Don&apos;t have an account?{' '}\n//               <span>\n//                   <Link\n//                     href=\"/material-ui/getting-started/templates/sign-in/\"\n//                     variant=\"body2\"\n//                     to=\"/signup\"\n//                     sx={{ alignSelf: 'center' }}\n//                   >\n//                     Sign up\n//                   </Link>\n//               </span>\n//             </Typography>\n//           </Box>\n//         </Card>\n//       </SignInContainer>\n//     </AppTheme>\n//   );\n// }","map":{"version":3,"names":[],"sources":["C:/Users/Raluca.Sodinca/Disertatie2/frontend/src/sign-in/SignIn.js"],"sourcesContent":["// import * as React from 'react';\r\n// import Box from '@mui/material/Box';\r\n// import Button from '@mui/material/Button';\r\n// import Checkbox from '@mui/material/Checkbox';\r\n// import CssBaseline from '@mui/material/CssBaseline';\r\n// import FormControlLabel from '@mui/material/FormControlLabel';\r\n// import Divider from '@mui/material/Divider';\r\n// import FormLabel from '@mui/material/FormLabel';\r\n// import FormControl from '@mui/material/FormControl';\r\n// import Link from '@mui/material/Link';\r\n// import TextField from '@mui/material/TextField';\r\n// import Typography from '@mui/material/Typography';\r\n// import Stack from '@mui/material/Stack';\r\n// import MuiCard from '@mui/material/Card';\r\n// import { styled } from '@mui/material/styles';\r\n// import ForgotPassword from './ForgotPassword';\r\n// import AppTheme from '../shared-theme/AppTheme';\r\n\r\n// const Card = styled(MuiCard)(({ theme }) => ({\r\n//   display: 'flex',\r\n//   flexDirection: 'column',\r\n//   alignSelf: 'center',\r\n//   width: '200%',\r\n//   padding: theme.spacing(4),\r\n//   gap: theme.spacing(2),\r\n// //   margin: 'auto',\r\n//   [theme.breakpoints.up('sm')]: {\r\n//     maxWidth: '450px',\r\n//   },\r\n//   boxShadow:\r\n//     'hsla(220, 30%, 5%, 0.05) 0px 5px 15px 0px, hsla(220, 25%, 10%, 0.05) 0px 15px 35px -5px',\r\n//   ...theme.applyStyles('dark', {\r\n//     boxShadow:\r\n//       'hsla(220, 30%, 5%, 0.5) 0px 5px 15px 0px, hsla(220, 25%, 10%, 0.08) 0px 15px 35px -5px',\r\n//   }),\r\n// }));\r\n\r\n// const SignInContainer = styled(Stack)(({ theme }) => ({\r\n//   minHeight: '100%',\r\n//   padding: theme.spacing(2),\r\n//   [theme.breakpoints.up('sm')]: {\r\n//     padding: theme.spacing(4),\r\n//   },\r\n//   '&::before': {\r\n//     content: '\"\"',\r\n//     display: 'block',\r\n//     position: 'absolute',\r\n//     zIndex: -1,\r\n//     inset: 0,\r\n//     backgroundImage:\r\n//       'radial-gradient(ellipse at 50% 50%, hsl(210, 100%, 97%), hsl(0, 0%, 100%))',\r\n//     backgroundRepeat: 'no-repeat',\r\n//     ...theme.applyStyles('dark', {\r\n//       backgroundImage:\r\n//         'radial-gradient(at 50% 50%, hsla(210, 100%, 16%, 0.5), hsl(220, 30%, 5%))',\r\n//     }),\r\n//   },\r\n// }));\r\n\r\n// export default function SignIn(props) {\r\n//   const [emailError, setEmailError] = React.useState(false);\r\n//   const [emailErrorMessage, setEmailErrorMessage] = React.useState('');\r\n//   const [passwordError, setPasswordError] = React.useState(false);\r\n//   const [passwordErrorMessage, setPasswordErrorMessage] = React.useState('');\r\n//   const [open, setOpen] = React.useState(false);\r\n\r\n//   const handleClickOpen = () => {\r\n//     setOpen(true);\r\n//   };\r\n\r\n//   const handleClose = () => {\r\n//     setOpen(false);\r\n//   };\r\n\r\n//   const handleSubmit = (event) => {\r\n//     if (emailError || passwordError) {\r\n//       event.preventDefault();\r\n//       return;\r\n//     }\r\n//     const data = new FormData(event.currentTarget);\r\n//     console.log({\r\n//       email: data.get('email'),\r\n//       password: data.get('password'),\r\n//     });\r\n//   };\r\n\r\n//   const validateInputs = () => {\r\n//     const email = document.getElementById('email');\r\n//     const password = document.getElementById('password');\r\n\r\n//     let isValid = true;\r\n\r\n//     if (!email.value || !/\\S+@\\S+\\.\\S+/.test(email.value)) {\r\n//       setEmailError(true);\r\n//       setEmailErrorMessage('Please enter a valid email address.');\r\n//       isValid = false;\r\n//     } else {\r\n//       setEmailError(false);\r\n//       setEmailErrorMessage('');\r\n//     }\r\n\r\n//     if (!password.value || password.value.length < 6) {\r\n//       setPasswordError(true);\r\n//       setPasswordErrorMessage('Password must be at least 6 characters long.');\r\n//       isValid = false;\r\n//     } else {\r\n//       setPasswordError(false);\r\n//       setPasswordErrorMessage('');\r\n//     }\r\n\r\n//     return isValid;\r\n//   };\r\n\r\n//   return (\r\n//     <AppTheme {...props}>\r\n//       <CssBaseline enableColorScheme />\r\n//       <SignInContainer direction=\"column\" justifyContent=\"space-between\">\r\n//         {/* <ColorModeSelect sx={{ position: 'fixed', top: '1rem', right: '1rem' }} /> */}\r\n//         <Card>\r\n//           <Typography\r\n//             component=\"h1\"\r\n//             variant=\"h4\"\r\n//             sx={{ width: '100%', fontSize: 'clamp(2rem, 10vw, 2.15rem)' }}\r\n//           >\r\n//             Sign in\r\n//           </Typography>\r\n//           <Box\r\n//             component=\"form\"\r\n//             onSubmit={handleSubmit}\r\n//             noValidate\r\n//             sx={{\r\n//               display: 'flex',\r\n//               flexDirection: 'column',\r\n//               width: '100%',\r\n//               gap: 2,\r\n//             }}\r\n//           >\r\n//      <FormControl>\r\n//   <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n//     <FormLabel htmlFor=\"email\">Email</FormLabel>\r\n//   </Box>\r\n//   <TextField\r\n//     error={emailError}\r\n//     helperText={emailErrorMessage}\r\n//     id=\"email\"\r\n//     type=\"email\"\r\n//     name=\"email\"\r\n//     placeholder=\"your@email.com\"\r\n//     autoComplete=\"email\"\r\n//     autoFocus\r\n//     required\r\n//     fullWidth\r\n//     variant=\"outlined\"\r\n//     color={emailError ? 'error' : 'primary'}\r\n//     sx={{ ariaLabel: 'email' }}\r\n//   />\r\n// </FormControl>\r\n\r\n//             <FormControl>\r\n//               <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\r\n//                 <FormLabel htmlFor=\"password\">Password</FormLabel>\r\n//                 <Link\r\n//                   component=\"button\"\r\n//                   type=\"button\"\r\n//                   onClick={handleClickOpen}\r\n//                   variant=\"body2\"\r\n//                   sx={{ alignSelf: 'baseline' }}\r\n//                 >\r\n//                   Forgot your password?\r\n//                 </Link>\r\n//               </Box>\r\n//               <TextField\r\n//                 error={passwordError}\r\n//                 helperText={passwordErrorMessage}\r\n//                 name=\"password\"\r\n//                 placeholder=\"••••••\"\r\n//                 type=\"password\"\r\n//                 id=\"password\"\r\n//                 autoComplete=\"current-password\"\r\n//                 autoFocus\r\n//                 required\r\n//                 fullWidth\r\n//                 variant=\"outlined\"\r\n//                 color={passwordError ? 'error' : 'primary'}\r\n//               />\r\n//             </FormControl>\r\n//             <FormControlLabel\r\n//               control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n//               label=\"Remember me\"\r\n//             />\r\n//             <ForgotPassword open={open} handleClose={handleClose} />\r\n//             <Button\r\n//               type=\"submit\"\r\n//               fullWidth\r\n//               variant=\"contained\"\r\n//               onClick={validateInputs}\r\n//             >\r\n//               Sign in\r\n//             </Button>\r\n//             <Typography sx={{ textAlign: 'center' }}>\r\n//               Don&apos;t have an account?{' '}\r\n//               <span>\r\n//                   <Link\r\n//                     href=\"/material-ui/getting-started/templates/sign-in/\"\r\n//                     variant=\"body2\"\r\n//                     to=\"/signup\"\r\n//                     sx={{ alignSelf: 'center' }}\r\n//                   >\r\n//                     Sign up\r\n//                   </Link>\r\n//               </span>\r\n//             </Typography>\r\n//           </Box>\r\n//         </Card>\r\n//       </SignInContainer>\r\n//     </AppTheme>\r\n//   );\r\n// }"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}