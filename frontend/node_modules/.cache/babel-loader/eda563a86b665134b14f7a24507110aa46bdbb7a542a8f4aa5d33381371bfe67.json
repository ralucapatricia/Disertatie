{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Raluca.Sodinca\\\\Disertatie2\\\\frontend\\\\src\\\\sign-up\\\\SignUp.tsx\",\n  _s = $RefreshSig$();\n// import * as React from 'react';\n// import Box from '@mui/material/Box';\n// import Button from '@mui/material/Button';\n// import Checkbox from '@mui/material/Checkbox';\n// import CssBaseline from '@mui/material/CssBaseline';\n// import Divider from '@mui/material/Divider';\n// import FormControlLabel from '@mui/material/FormControlLabel';\n// import FormLabel from '@mui/material/FormLabel';\n// import FormControl from '@mui/material/FormControl';\n// import Link from '@mui/material/Link';\n// import TextField from '@mui/material/TextField';\n// import Typography from '@mui/material/Typography';\n// import Stack from '@mui/material/Stack';\n// import MuiCard from '@mui/material/Card';\n// import {\n//   createTheme,\n//   ThemeProvider,\n//   styled,\n//   PaletteMode,\n// } from '@mui/material/styles';\n// import getSignUpTheme from './theme/getSignUpTheme';\n\n// const Card = styled(MuiCard)(({ theme }) => ({\n//   display: 'flex',\n//   flexDirection: 'column',\n//   alignSelf: 'center',\n//   width: '200%',\n//   padding: theme.spacing(4),\n//   gap: theme.spacing(2),\n//   [theme.breakpoints.up('sm')]: {\n//     maxWidth: '450px',\n//   },\n//   boxShadow:\n//     'hsla(220, 30%, 5%, 0.05) 0px 5px 15px 0px, hsla(220, 25%, 10%, 0.05) 0px 15px 35px -5px',\n//   ...theme.applyStyles('dark', {\n//     boxShadow:\n//       'hsla(220, 30%, 5%, 0.5) 0px 5px 15px 0px, hsla(220, 25%, 10%, 0.08) 0px 15px 35px -5px',\n//   }),\n// }));\n\n// const SignUpContainer = styled(Stack)(({ theme }) => ({\n//   minHeight: '100%',\n//   padding: theme.spacing(2),\n//   [theme.breakpoints.up('sm')]: {\n//     padding: theme.spacing(4),\n//   },\n//   backgroundImage:\n//     'radial-gradient(ellipse at 50% 50%, hsl(210, 100%, 97%), hsl(0, 0%, 100%))',\n//   backgroundRepeat: 'no-repeat',\n//   ...theme.applyStyles('dark', {\n//     backgroundImage:\n//       'radial-gradient(at 50% 50%, hsla(210, 100%, 16%, 0.5), hsl(220, 30%, 5%))',\n//   }),\n// }));\n\n// export default function SignUp() {\n//   const [mode, setMode] = React.useState<PaletteMode>('light');\n//   const [showCustomTheme, setShowCustomTheme] = React.useState(true);\n//   const defaultTheme = createTheme({ palette: { mode } });\n//   const SignUpTheme = createTheme(getSignUpTheme(mode));\n//   const [nameError, setNameError] = React.useState(false);\n//   const [nameErrorMessage, setNameErrorMessage] = React.useState('');\n//   const [emailError, setEmailError] = React.useState(false);\n//   const [emailErrorMessage, setEmailErrorMessage] = React.useState('');\n//   const [passwordError, setPasswordError] = React.useState(false);\n//   const [passwordErrorMessage, setPasswordErrorMessage] = React.useState('');\n//   // This code only runs on the client side, to determine the system color preference\n//   React.useEffect(() => {\n//     // Check if there is a preferred mode in localStorage\n//     const savedMode = localStorage.getItem('themeMode') as PaletteMode | null;\n//     if (savedMode) {\n//       setMode(savedMode);\n//     } else {\n//       // If no preference is found, it uses system preference\n//       const systemPrefersDark = window.matchMedia(\n//         '(prefers-color-scheme: dark)',\n//       ).matches;\n//       setMode(systemPrefersDark ? 'dark' : 'light');\n//     }\n//   }, []);\n\n//   const toggleColorMode = () => {\n//     const newMode = mode === 'dark' ? 'light' : 'dark';\n//     setMode(newMode);\n//     localStorage.setItem('themeMode', newMode); // Save the selected mode to localStorage\n//   };\n\n//   const toggleCustomTheme = () => {\n//     setShowCustomTheme((prev) => !prev);\n//   };\n\n//   const validateInputs = () => {\n//     const email = document.getElementById('email') as HTMLInputElement;\n//     const password = document.getElementById('password') as HTMLInputElement;\n//     const name = document.getElementById('name') as HTMLInputElement;\n\n//     let isValid = true;\n\n//     if (!email.value || !/\\S+@\\S+\\.\\S+/.test(email.value)) {\n//       setEmailError(true);\n//       setEmailErrorMessage('Please enter a valid email address.');\n//       isValid = false;\n//     } else {\n//       setEmailError(false);\n//       setEmailErrorMessage('');\n//     }\n\n//     if (!password.value || password.value.length < 6) {\n//       setPasswordError(true);\n//       setPasswordErrorMessage('Password must be at least 6 characters long.');\n//       isValid = false;\n//     } else {\n//       setPasswordError(false);\n//       setPasswordErrorMessage('');\n//     }\n\n//     if (!name.value || name.value.length < 1) {\n//       setNameError(true);\n//       setNameErrorMessage('Name is required.');\n//       isValid = false;\n//     } else {\n//       setNameError(false);\n//       setNameErrorMessage('');\n//     }\n\n//     return isValid;\n//   };\n\n//   const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n//     if (nameError || emailError || passwordError) {\n//       event.preventDefault();\n//       return;\n//     }\n//     const data = new FormData(event.currentTarget);\n//     console.log({\n//       name: data.get('name'),\n//       lastName: data.get('lastName'),\n//       email: data.get('email'),\n//       password: data.get('password'),\n//     });\n//   };\n\n//   return (\n//       <ThemeProvider theme={showCustomTheme ? SignUpTheme : defaultTheme}>\n//         <CssBaseline enableColorScheme />\n//         {/* <SignUpContainer direction=\"column\" justifyContent=\"space-between\"> */}\n//           <Card variant=\"outlined\">\n//             <Typography\n//               component=\"h1\"\n//               variant=\"h4\"\n//               sx={{ width: '100%', fontSize: 'clamp(2rem, 10vw, 2.15rem)' }}\n//             >\n//               Sign up\n//             </Typography>\n//             <Box\n//               component=\"form\"\n//               onSubmit={handleSubmit}\n//               sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}\n//             >\n//               <FormControl>\n//                 <FormLabel htmlFor=\"name\">Full name</FormLabel>\n//                 <TextField\n//                   autoComplete=\"name\"\n//                   name=\"name\"\n//                   required\n//                   fullWidth\n//                   id=\"name\"\n//                   placeholder=\"Jon Snow\"\n//                   error={nameError}\n//                   helperText={nameErrorMessage}\n//                   color={nameError ? 'error' : 'primary'}\n//                 />\n//               </FormControl>\n//               <FormControl>\n//                 <FormLabel htmlFor=\"email\">Email</FormLabel>\n//                 <TextField\n//                   required\n//                   fullWidth\n//                   id=\"email\"\n//                   placeholder=\"your@email.com\"\n//                   name=\"email\"\n//                   autoComplete=\"email\"\n//                   variant=\"outlined\"\n//                   error={emailError}\n//                   helperText={emailErrorMessage}\n//                   color={passwordError ? 'error' : 'primary'}\n//                 />\n//               </FormControl>\n//               <FormControl>\n//                 <FormLabel htmlFor=\"password\">Password</FormLabel>\n//                 <TextField\n//                   required\n//                   fullWidth\n//                   name=\"password\"\n//                   placeholder=\"••••••\"\n//                   type=\"password\"\n//                   id=\"password\"\n//                   autoComplete=\"new-password\"\n//                   variant=\"outlined\"\n//                   error={passwordError}\n//                   helperText={passwordErrorMessage}\n//                   color={passwordError ? 'error' : 'primary'}\n//                 />\n//               </FormControl>\n//               <Button\n//                 type=\"submit\"\n//                 fullWidth\n//                 variant=\"contained\"\n//                 onClick={validateInputs}\n//               >\n//                 Sign up\n//               </Button>\n//               <Typography sx={{ textAlign: 'center' }}>\n//                 Already have an account?{' '}\n//                 <span>\n//                   <Link\n//                     href=\"/\"\n//                     variant=\"body2\"\n//                     sx={{ alignSelf: 'center' }}\n//                   >\n//                     Sign in\n//                   </Link>\n//                 </span>\n//               </Typography>\n//             </Box>\n\n//           </Card>\n//         {/* </SignUpContainer> */}\n//       </ThemeProvider>\n//   );\n// }\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport FormControl from '@mui/material/FormControl';\nimport FormLabel from '@mui/material/FormLabel';\nimport Link from '@mui/material/Link';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport Stack from '@mui/material/Stack';\nimport MuiCard from '@mui/material/Card';\nimport { createTheme, ThemeProvider, styled } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport getSignUpTheme from './theme/getSignUpTheme';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Card = styled(MuiCard)(({\n  theme\n}) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  alignSelf: 'center',\n  width: '100%',\n  padding: theme.spacing(4),\n  gap: theme.spacing(2),\n  [theme.breakpoints.up('sm')]: {\n    maxWidth: '450px'\n  },\n  boxShadow: 'hsla(220, 30%, 5%, 0.05) 0px 5px 15px 0px, hsla(220, 25%, 10%, 0.05) 0px 15px 35px -5px',\n  ...theme.applyStyles('dark', {\n    boxShadow: 'hsla(220, 30%, 5%, 0.5) 0px 5px 15px 0px, hsla(220, 25%, 10%, 0.08) 0px 15px 35px -5px'\n  })\n}));\n_c = Card;\nconst SignUpContainer = styled(Stack)(({\n  theme\n}) => ({\n  minHeight: '100vh',\n  padding: theme.spacing(2),\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  [theme.breakpoints.up('sm')]: {\n    padding: theme.spacing(4)\n  },\n  backgroundImage: 'radial-gradient(ellipse at 50% 50%, hsl(210, 100%, 97%), hsl(0, 0%, 100%))',\n  backgroundRepeat: 'no-repeat',\n  ...theme.applyStyles('dark', {\n    backgroundImage: 'radial-gradient(at 50% 50%, hsla(210, 100%, 16%, 0.5), hsl(220, 30%, 5%))'\n  })\n}));\n_c2 = SignUpContainer;\nexport default function SignUp() {\n  _s();\n  const [mode, setMode] = React.useState('light');\n  const [showCustomTheme, setShowCustomTheme] = React.useState(true);\n  const defaultTheme = createTheme({\n    palette: {\n      mode\n    }\n  });\n  const SignUpTheme = createTheme(getSignUpTheme(mode));\n  const [nameError, setNameError] = React.useState(false);\n  const [nameErrorMessage, setNameErrorMessage] = React.useState('');\n  const [emailError, setEmailError] = React.useState(false);\n  const [emailErrorMessage, setEmailErrorMessage] = React.useState('');\n  const [passwordError, setPasswordError] = React.useState(false);\n  const [passwordErrorMessage, setPasswordErrorMessage] = React.useState('');\n  React.useEffect(() => {\n    const savedMode = localStorage.getItem('themeMode');\n    if (savedMode) {\n      setMode(savedMode);\n    } else {\n      const systemPrefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n      setMode(systemPrefersDark ? 'dark' : 'light');\n    }\n  }, []);\n  const validateInputs = () => {\n    const email = document.getElementById('email');\n    const password = document.getElementById('password');\n    const name = document.getElementById('name');\n    let isValid = true;\n    if (!email.value || !/\\S+@\\S+\\.\\S+/.test(email.value)) {\n      setEmailError(true);\n      setEmailErrorMessage('Please enter a valid email address.');\n      isValid = false;\n    } else {\n      setEmailError(false);\n      setEmailErrorMessage('');\n    }\n    if (!password.value || password.value.length < 6) {\n      setPasswordError(true);\n      setPasswordErrorMessage('Password must be at least 6 characters long.');\n      isValid = false;\n    } else {\n      setPasswordError(false);\n      setPasswordErrorMessage('');\n    }\n    if (!name.value || name.value.length < 1) {\n      setNameError(true);\n      setNameErrorMessage('Name is required.');\n      isValid = false;\n    } else {\n      setNameError(false);\n      setNameErrorMessage('');\n    }\n    return isValid;\n  };\n  const handleSubmit = event => {\n    if (nameError || emailError || passwordError) {\n      event.preventDefault();\n      return;\n    }\n    const data = new FormData(event.currentTarget);\n    console.log({\n      name: data.get('name'),\n      email: data.get('email'),\n      password: data.get('password')\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: showCustomTheme ? SignUpTheme : defaultTheme,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {\n      enableColorScheme: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SignUpContainer, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        variant: \"outlined\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h4\",\n          sx: {\n            width: '100%',\n            textAlign: 'center',\n            fontSize: 'clamp(2rem, 10vw, 2.15rem)'\n          },\n          children: \"Sign up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          component: \"form\",\n          onSubmit: handleSubmit,\n          sx: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: 2,\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              htmlFor: \"name\",\n              children: \"Full name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              autoComplete: \"name\",\n              name: \"name\",\n              required: true,\n              fullWidth: true,\n              id: \"name\",\n              placeholder: \"Jon Snow\",\n              error: nameError,\n              helperText: nameErrorMessage,\n              color: nameError ? 'error' : 'primary'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              htmlFor: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              required: true,\n              fullWidth: true,\n              id: \"email\",\n              placeholder: \"your@email.com\",\n              name: \"email\",\n              autoComplete: \"email\",\n              variant: \"outlined\",\n              error: emailError,\n              helperText: emailErrorMessage,\n              color: passwordError ? 'error' : 'primary'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              htmlFor: \"password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              required: true,\n              fullWidth: true,\n              name: \"password\",\n              placeholder: \"\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\",\n              type: \"password\",\n              id: \"password\",\n              autoComplete: \"new-password\",\n              variant: \"outlined\",\n              error: passwordError,\n              helperText: passwordErrorMessage,\n              color: passwordError ? 'error' : 'primary'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            fullWidth: true,\n            variant: \"contained\",\n            onClick: validateInputs,\n            children: \"Sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            sx: {\n              textAlign: 'center'\n            },\n            children: [\"Already have an account?\", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                href: \"/\",\n                variant: \"body2\",\n                sx: {\n                  alignSelf: 'center'\n                },\n                children: \"Sign in\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 425,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 353,\n    columnNumber: 5\n  }, this);\n}\n_s(SignUp, \"EJXPufgA4/NSiycn87zsatUIypE=\");\n_c3 = SignUp;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Card\");\n$RefreshReg$(_c2, \"SignUpContainer\");\n$RefreshReg$(_c3, \"SignUp\");","map":{"version":3,"names":["React","Box","Button","FormControl","FormLabel","Link","TextField","Typography","Stack","MuiCard","createTheme","ThemeProvider","styled","CssBaseline","getSignUpTheme","jsxDEV","_jsxDEV","Card","theme","display","flexDirection","alignSelf","width","padding","spacing","gap","breakpoints","up","maxWidth","boxShadow","applyStyles","_c","SignUpContainer","minHeight","justifyContent","alignItems","backgroundImage","backgroundRepeat","_c2","SignUp","_s","mode","setMode","useState","showCustomTheme","setShowCustomTheme","defaultTheme","palette","SignUpTheme","nameError","setNameError","nameErrorMessage","setNameErrorMessage","emailError","setEmailError","emailErrorMessage","setEmailErrorMessage","passwordError","setPasswordError","passwordErrorMessage","setPasswordErrorMessage","useEffect","savedMode","localStorage","getItem","systemPrefersDark","window","matchMedia","matches","validateInputs","email","document","getElementById","password","name","isValid","value","test","length","handleSubmit","event","preventDefault","data","FormData","currentTarget","console","log","get","children","enableColorScheme","fileName","_jsxFileName","lineNumber","columnNumber","variant","component","sx","textAlign","fontSize","onSubmit","htmlFor","autoComplete","required","fullWidth","id","placeholder","error","helperText","color","type","onClick","href","_c3","$RefreshReg$"],"sources":["C:/Users/Raluca.Sodinca/Disertatie2/frontend/src/sign-up/SignUp.tsx"],"sourcesContent":["// import * as React from 'react';\r\n// import Box from '@mui/material/Box';\r\n// import Button from '@mui/material/Button';\r\n// import Checkbox from '@mui/material/Checkbox';\r\n// import CssBaseline from '@mui/material/CssBaseline';\r\n// import Divider from '@mui/material/Divider';\r\n// import FormControlLabel from '@mui/material/FormControlLabel';\r\n// import FormLabel from '@mui/material/FormLabel';\r\n// import FormControl from '@mui/material/FormControl';\r\n// import Link from '@mui/material/Link';\r\n// import TextField from '@mui/material/TextField';\r\n// import Typography from '@mui/material/Typography';\r\n// import Stack from '@mui/material/Stack';\r\n// import MuiCard from '@mui/material/Card';\r\n// import {\r\n//   createTheme,\r\n//   ThemeProvider,\r\n//   styled,\r\n//   PaletteMode,\r\n// } from '@mui/material/styles';\r\n// import getSignUpTheme from './theme/getSignUpTheme';\r\n\r\n\r\n// const Card = styled(MuiCard)(({ theme }) => ({\r\n//   display: 'flex',\r\n//   flexDirection: 'column',\r\n//   alignSelf: 'center',\r\n//   width: '200%',\r\n//   padding: theme.spacing(4),\r\n//   gap: theme.spacing(2),\r\n//   [theme.breakpoints.up('sm')]: {\r\n//     maxWidth: '450px',\r\n//   },\r\n//   boxShadow:\r\n//     'hsla(220, 30%, 5%, 0.05) 0px 5px 15px 0px, hsla(220, 25%, 10%, 0.05) 0px 15px 35px -5px',\r\n//   ...theme.applyStyles('dark', {\r\n//     boxShadow:\r\n//       'hsla(220, 30%, 5%, 0.5) 0px 5px 15px 0px, hsla(220, 25%, 10%, 0.08) 0px 15px 35px -5px',\r\n//   }),\r\n// }));\r\n\r\n// const SignUpContainer = styled(Stack)(({ theme }) => ({\r\n//   minHeight: '100%',\r\n//   padding: theme.spacing(2),\r\n//   [theme.breakpoints.up('sm')]: {\r\n//     padding: theme.spacing(4),\r\n//   },\r\n//   backgroundImage:\r\n//     'radial-gradient(ellipse at 50% 50%, hsl(210, 100%, 97%), hsl(0, 0%, 100%))',\r\n//   backgroundRepeat: 'no-repeat',\r\n//   ...theme.applyStyles('dark', {\r\n//     backgroundImage:\r\n//       'radial-gradient(at 50% 50%, hsla(210, 100%, 16%, 0.5), hsl(220, 30%, 5%))',\r\n//   }),\r\n// }));\r\n\r\n// export default function SignUp() {\r\n//   const [mode, setMode] = React.useState<PaletteMode>('light');\r\n//   const [showCustomTheme, setShowCustomTheme] = React.useState(true);\r\n//   const defaultTheme = createTheme({ palette: { mode } });\r\n//   const SignUpTheme = createTheme(getSignUpTheme(mode));\r\n//   const [nameError, setNameError] = React.useState(false);\r\n//   const [nameErrorMessage, setNameErrorMessage] = React.useState('');\r\n//   const [emailError, setEmailError] = React.useState(false);\r\n//   const [emailErrorMessage, setEmailErrorMessage] = React.useState('');\r\n//   const [passwordError, setPasswordError] = React.useState(false);\r\n//   const [passwordErrorMessage, setPasswordErrorMessage] = React.useState('');\r\n//   // This code only runs on the client side, to determine the system color preference\r\n//   React.useEffect(() => {\r\n//     // Check if there is a preferred mode in localStorage\r\n//     const savedMode = localStorage.getItem('themeMode') as PaletteMode | null;\r\n//     if (savedMode) {\r\n//       setMode(savedMode);\r\n//     } else {\r\n//       // If no preference is found, it uses system preference\r\n//       const systemPrefersDark = window.matchMedia(\r\n//         '(prefers-color-scheme: dark)',\r\n//       ).matches;\r\n//       setMode(systemPrefersDark ? 'dark' : 'light');\r\n//     }\r\n//   }, []);\r\n\r\n//   const toggleColorMode = () => {\r\n//     const newMode = mode === 'dark' ? 'light' : 'dark';\r\n//     setMode(newMode);\r\n//     localStorage.setItem('themeMode', newMode); // Save the selected mode to localStorage\r\n//   };\r\n\r\n//   const toggleCustomTheme = () => {\r\n//     setShowCustomTheme((prev) => !prev);\r\n//   };\r\n\r\n//   const validateInputs = () => {\r\n//     const email = document.getElementById('email') as HTMLInputElement;\r\n//     const password = document.getElementById('password') as HTMLInputElement;\r\n//     const name = document.getElementById('name') as HTMLInputElement;\r\n\r\n//     let isValid = true;\r\n\r\n//     if (!email.value || !/\\S+@\\S+\\.\\S+/.test(email.value)) {\r\n//       setEmailError(true);\r\n//       setEmailErrorMessage('Please enter a valid email address.');\r\n//       isValid = false;\r\n//     } else {\r\n//       setEmailError(false);\r\n//       setEmailErrorMessage('');\r\n//     }\r\n\r\n//     if (!password.value || password.value.length < 6) {\r\n//       setPasswordError(true);\r\n//       setPasswordErrorMessage('Password must be at least 6 characters long.');\r\n//       isValid = false;\r\n//     } else {\r\n//       setPasswordError(false);\r\n//       setPasswordErrorMessage('');\r\n//     }\r\n\r\n//     if (!name.value || name.value.length < 1) {\r\n//       setNameError(true);\r\n//       setNameErrorMessage('Name is required.');\r\n//       isValid = false;\r\n//     } else {\r\n//       setNameError(false);\r\n//       setNameErrorMessage('');\r\n//     }\r\n\r\n//     return isValid;\r\n//   };\r\n\r\n//   const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n//     if (nameError || emailError || passwordError) {\r\n//       event.preventDefault();\r\n//       return;\r\n//     }\r\n//     const data = new FormData(event.currentTarget);\r\n//     console.log({\r\n//       name: data.get('name'),\r\n//       lastName: data.get('lastName'),\r\n//       email: data.get('email'),\r\n//       password: data.get('password'),\r\n//     });\r\n//   };\r\n\r\n//   return (\r\n//       <ThemeProvider theme={showCustomTheme ? SignUpTheme : defaultTheme}>\r\n//         <CssBaseline enableColorScheme />\r\n//         {/* <SignUpContainer direction=\"column\" justifyContent=\"space-between\"> */}\r\n//           <Card variant=\"outlined\">\r\n//             <Typography\r\n//               component=\"h1\"\r\n//               variant=\"h4\"\r\n//               sx={{ width: '100%', fontSize: 'clamp(2rem, 10vw, 2.15rem)' }}\r\n//             >\r\n//               Sign up\r\n//             </Typography>\r\n//             <Box\r\n//               component=\"form\"\r\n//               onSubmit={handleSubmit}\r\n//               sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}\r\n//             >\r\n//               <FormControl>\r\n//                 <FormLabel htmlFor=\"name\">Full name</FormLabel>\r\n//                 <TextField\r\n//                   autoComplete=\"name\"\r\n//                   name=\"name\"\r\n//                   required\r\n//                   fullWidth\r\n//                   id=\"name\"\r\n//                   placeholder=\"Jon Snow\"\r\n//                   error={nameError}\r\n//                   helperText={nameErrorMessage}\r\n//                   color={nameError ? 'error' : 'primary'}\r\n//                 />\r\n//               </FormControl>\r\n//               <FormControl>\r\n//                 <FormLabel htmlFor=\"email\">Email</FormLabel>\r\n//                 <TextField\r\n//                   required\r\n//                   fullWidth\r\n//                   id=\"email\"\r\n//                   placeholder=\"your@email.com\"\r\n//                   name=\"email\"\r\n//                   autoComplete=\"email\"\r\n//                   variant=\"outlined\"\r\n//                   error={emailError}\r\n//                   helperText={emailErrorMessage}\r\n//                   color={passwordError ? 'error' : 'primary'}\r\n//                 />\r\n//               </FormControl>\r\n//               <FormControl>\r\n//                 <FormLabel htmlFor=\"password\">Password</FormLabel>\r\n//                 <TextField\r\n//                   required\r\n//                   fullWidth\r\n//                   name=\"password\"\r\n//                   placeholder=\"••••••\"\r\n//                   type=\"password\"\r\n//                   id=\"password\"\r\n//                   autoComplete=\"new-password\"\r\n//                   variant=\"outlined\"\r\n//                   error={passwordError}\r\n//                   helperText={passwordErrorMessage}\r\n//                   color={passwordError ? 'error' : 'primary'}\r\n//                 />\r\n//               </FormControl>\r\n//               <Button\r\n//                 type=\"submit\"\r\n//                 fullWidth\r\n//                 variant=\"contained\"\r\n//                 onClick={validateInputs}\r\n//               >\r\n//                 Sign up\r\n//               </Button>\r\n//               <Typography sx={{ textAlign: 'center' }}>\r\n//                 Already have an account?{' '}\r\n//                 <span>\r\n//                   <Link\r\n//                     href=\"/\"\r\n//                     variant=\"body2\"\r\n//                     sx={{ alignSelf: 'center' }}\r\n//                   >\r\n//                     Sign in\r\n//                   </Link>\r\n//                 </span>\r\n//               </Typography>\r\n//             </Box>\r\n        \r\n    \r\n//           </Card>\r\n//         {/* </SignUpContainer> */}\r\n//       </ThemeProvider>\r\n//   );\r\n// }\r\nimport * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport Link from '@mui/material/Link';\r\nimport TextField from '@mui/material/TextField';\r\nimport Typography from '@mui/material/Typography';\r\nimport Stack from '@mui/material/Stack';\r\nimport MuiCard from '@mui/material/Card';\r\nimport { createTheme, ThemeProvider, styled, PaletteMode } from '@mui/material/styles';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport getSignUpTheme from './theme/getSignUpTheme';\r\n\r\nconst Card = styled(MuiCard)(({ theme }) => ({\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignSelf: 'center',\r\n  width: '100%',\r\n  padding: theme.spacing(4),\r\n  gap: theme.spacing(2),\r\n  [theme.breakpoints.up('sm')]: {\r\n    maxWidth: '450px',\r\n  },\r\n  boxShadow: 'hsla(220, 30%, 5%, 0.05) 0px 5px 15px 0px, hsla(220, 25%, 10%, 0.05) 0px 15px 35px -5px',\r\n  ...theme.applyStyles('dark', {\r\n    boxShadow: 'hsla(220, 30%, 5%, 0.5) 0px 5px 15px 0px, hsla(220, 25%, 10%, 0.08) 0px 15px 35px -5px',\r\n  }),\r\n}));\r\n\r\nconst SignUpContainer = styled(Stack)(({ theme }) => ({\r\n  minHeight: '100vh',\r\n  padding: theme.spacing(2),\r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  [theme.breakpoints.up('sm')]: {\r\n    padding: theme.spacing(4),\r\n  },\r\n  backgroundImage: 'radial-gradient(ellipse at 50% 50%, hsl(210, 100%, 97%), hsl(0, 0%, 100%))',\r\n  backgroundRepeat: 'no-repeat',\r\n  ...theme.applyStyles('dark', {\r\n    backgroundImage: 'radial-gradient(at 50% 50%, hsla(210, 100%, 16%, 0.5), hsl(220, 30%, 5%))',\r\n  }),\r\n}));\r\n\r\nexport default function SignUp() {\r\n  const [mode, setMode] = React.useState<PaletteMode>('light');\r\n  const [showCustomTheme, setShowCustomTheme] = React.useState(true);\r\n  const defaultTheme = createTheme({ palette: { mode } });\r\n  const SignUpTheme = createTheme(getSignUpTheme(mode));\r\n  const [nameError, setNameError] = React.useState(false);\r\n  const [nameErrorMessage, setNameErrorMessage] = React.useState('');\r\n  const [emailError, setEmailError] = React.useState(false);\r\n  const [emailErrorMessage, setEmailErrorMessage] = React.useState('');\r\n  const [passwordError, setPasswordError] = React.useState(false);\r\n  const [passwordErrorMessage, setPasswordErrorMessage] = React.useState('');\r\n\r\n  React.useEffect(() => {\r\n    const savedMode = localStorage.getItem('themeMode') as PaletteMode | null;\r\n    if (savedMode) {\r\n      setMode(savedMode);\r\n    } else {\r\n      const systemPrefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\r\n      setMode(systemPrefersDark ? 'dark' : 'light');\r\n    }\r\n  }, []);\r\n\r\n  const validateInputs = () => {\r\n    const email = document.getElementById('email') as HTMLInputElement;\r\n    const password = document.getElementById('password') as HTMLInputElement;\r\n    const name = document.getElementById('name') as HTMLInputElement;\r\n\r\n    let isValid = true;\r\n\r\n    if (!email.value || !/\\S+@\\S+\\.\\S+/.test(email.value)) {\r\n      setEmailError(true);\r\n      setEmailErrorMessage('Please enter a valid email address.');\r\n      isValid = false;\r\n    } else {\r\n      setEmailError(false);\r\n      setEmailErrorMessage('');\r\n    }\r\n\r\n    if (!password.value || password.value.length < 6) {\r\n      setPasswordError(true);\r\n      setPasswordErrorMessage('Password must be at least 6 characters long.');\r\n      isValid = false;\r\n    } else {\r\n      setPasswordError(false);\r\n      setPasswordErrorMessage('');\r\n    }\r\n\r\n    if (!name.value || name.value.length < 1) {\r\n      setNameError(true);\r\n      setNameErrorMessage('Name is required.');\r\n      isValid = false;\r\n    } else {\r\n      setNameError(false);\r\n      setNameErrorMessage('');\r\n    }\r\n\r\n    return isValid;\r\n  };\r\n\r\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n    if (nameError || emailError || passwordError) {\r\n      event.preventDefault();\r\n      return;\r\n    }\r\n    const data = new FormData(event.currentTarget);\r\n    console.log({\r\n      name: data.get('name'),\r\n      email: data.get('email'),\r\n      password: data.get('password'),\r\n    });\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={showCustomTheme ? SignUpTheme : defaultTheme}>\r\n      <CssBaseline enableColorScheme />\r\n      <SignUpContainer>\r\n        <Card variant=\"outlined\">\r\n          <Typography\r\n            component=\"h1\"\r\n            variant=\"h4\"\r\n            sx={{ width: '100%', textAlign: 'center', fontSize: 'clamp(2rem, 10vw, 2.15rem)' }}\r\n          >\r\n            Sign up\r\n          </Typography>\r\n          <Box\r\n            component=\"form\"\r\n            onSubmit={handleSubmit}\r\n            sx={{ display: 'flex', flexDirection: 'column', gap: 2, alignItems: 'center' }}\r\n          >\r\n            <FormControl>\r\n              <FormLabel htmlFor=\"name\">Full name</FormLabel>\r\n              <TextField\r\n                autoComplete=\"name\"\r\n                name=\"name\"\r\n                required\r\n                fullWidth\r\n                id=\"name\"\r\n                placeholder=\"Jon Snow\"\r\n                error={nameError}\r\n                helperText={nameErrorMessage}\r\n                color={nameError ? 'error' : 'primary'}\r\n              />\r\n            </FormControl>\r\n            <FormControl>\r\n              <FormLabel htmlFor=\"email\">Email</FormLabel>\r\n              <TextField\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                placeholder=\"your@email.com\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                variant=\"outlined\"\r\n                error={emailError}\r\n                helperText={emailErrorMessage}\r\n                color={passwordError ? 'error' : 'primary'}\r\n              />\r\n            </FormControl>\r\n            <FormControl>\r\n              <FormLabel htmlFor=\"password\">Password</FormLabel>\r\n              <TextField\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                placeholder=\"••••••\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"new-password\"\r\n                variant=\"outlined\"\r\n                error={passwordError}\r\n                helperText={passwordErrorMessage}\r\n                color={passwordError ? 'error' : 'primary'}\r\n              />\r\n            </FormControl>\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              onClick={validateInputs}\r\n            >\r\n              Sign up\r\n            </Button>\r\n            <Typography sx={{ textAlign: 'center' }}>\r\n              Already have an account?{' '}\r\n              <span>\r\n                <Link href=\"/\" variant=\"body2\" sx={{ alignSelf: 'center' }}>\r\n                  Sign in\r\n                </Link>\r\n              </span>\r\n            </Typography>\r\n          </Box>\r\n        </Card>\r\n      </SignUpContainer>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAO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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}