{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Raluca.Sodinca\\\\Disertatie2\\\\frontend\\\\src\\\\sign-up\\\\ToggleColorMode.tsx\";\nimport * as React from 'react';\nimport IconButton from '@mui/material/IconButton';\nimport ModeNightRoundedIcon from '@mui/icons-material/ModeNightRounded';\nimport WbSunnyRoundedIcon from '@mui/icons-material/WbSunnyRounded';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ToggleColorMode({\n  mode,\n  toggleColorMode,\n  ...props\n}) {\n  return /*#__PURE__*/_jsxDEV(IconButton, {\n    onClick: toggleColorMode,\n    size: \"small\",\n    color: \"primary\",\n    \"aria-label\": \"Theme toggle button\",\n    ...props,\n    children: mode === 'dark' ? /*#__PURE__*/_jsxDEV(WbSunnyRoundedIcon, {\n      fontSize: \"small\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(ModeNightRoundedIcon, {\n      fontSize: \"small\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_c = ToggleColorMode;\nvar _c;\n$RefreshReg$(_c, \"ToggleColorMode\");","map":{"version":3,"names":["React","IconButton","ModeNightRoundedIcon","WbSunnyRoundedIcon","jsxDEV","_jsxDEV","ToggleColorMode","mode","toggleColorMode","props","onClick","size","color","children","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Raluca.Sodinca/Disertatie2/frontend/src/sign-up/ToggleColorMode.tsx"],"sourcesContent":["import * as React from 'react';\r\n\r\nimport { PaletteMode } from '@mui/material/styles';\r\nimport IconButton, { IconButtonProps } from '@mui/material/IconButton';\r\n\r\nimport ModeNightRoundedIcon from '@mui/icons-material/ModeNightRounded';\r\nimport WbSunnyRoundedIcon from '@mui/icons-material/WbSunnyRounded';\r\n\r\ninterface ToggleColorModeProps extends IconButtonProps {\r\n  mode: PaletteMode;\r\n  toggleColorMode: () => void;\r\n}\r\n\r\nexport default function ToggleColorMode({\r\n  mode,\r\n  toggleColorMode,\r\n  ...props\r\n}: ToggleColorModeProps) {\r\n  return (\r\n    <IconButton\r\n      onClick={toggleColorMode}\r\n      size=\"small\"\r\n      color=\"primary\"\r\n      aria-label=\"Theme toggle button\"\r\n      {...props}\r\n    >\r\n      {mode === 'dark' ? (\r\n        <WbSunnyRoundedIcon fontSize=\"small\" />\r\n      ) : (\r\n        <ModeNightRoundedIcon fontSize=\"small\" />\r\n      )}\r\n    </IconButton>\r\n  );\r\n}"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAG9B,OAAOC,UAAU,MAA2B,0BAA0B;AAEtE,OAAOC,oBAAoB,MAAM,sCAAsC;AACvE,OAAOC,kBAAkB,MAAM,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOpE,eAAe,SAASC,eAAeA,CAAC;EACtCC,IAAI;EACJC,eAAe;EACf,GAAGC;AACiB,CAAC,EAAE;EACvB,oBACEJ,OAAA,CAACJ,UAAU;IACTS,OAAO,EAAEF,eAAgB;IACzBG,IAAI,EAAC,OAAO;IACZC,KAAK,EAAC,SAAS;IACf,cAAW,qBAAqB;IAAA,GAC5BH,KAAK;IAAAI,QAAA,EAERN,IAAI,KAAK,MAAM,gBACdF,OAAA,CAACF,kBAAkB;MAACW,QAAQ,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAEvCb,OAAA,CAACH,oBAAoB;MAACY,QAAQ,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EACzC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAEjB;AAACC,EAAA,GApBuBb,eAAe;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}