{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Raluca.Sodinca\\\\Disertatie2\\\\frontend\\\\src\\\\sign-up\\\\SignUp.tsx\",\n  _s = $RefreshSig$();\n// import * as React from 'react';\n// import Box from '@mui/material/Box';\n// import Button from '@mui/material/Button';\n// import Checkbox from '@mui/material/Checkbox';\n// import CssBaseline from '@mui/material/CssBaseline';\n// import FormControlLabel from '@mui/material/FormControlLabel';\n// import FormLabel from '@mui/material/FormLabel';\n// import FormControl from '@mui/material/FormControl';\n// import Link from '@mui/material/Link';\n// import TextField from '@mui/material/TextField';\n// import Typography from '@mui/material/Typography';\n// import Stack from '@mui/material/Stack';\n// import MuiCard from '@mui/material/Card';\n// import { styled } from '@mui/material/styles';\n// import AppTheme from '../shared-theme/AppTheme'; // Asigură-te că calea este corectă\n\n// const Card = styled(MuiCard)(({ theme }) => ({\n//   display: 'flex',\n//   flexDirection: 'column',\n//   alignSelf: 'center',\n//   width: '200%',\n//   padding: theme.spacing(4),\n//   gap: theme.spacing(2),\n//   [theme.breakpoints.up('sm')]: {\n//     maxWidth: '450px',\n//   },\n//   boxShadow:\n//     'hsla(220, 30%, 5%, 0.05) 0px 5px 15px 0px, hsla(220, 25%, 10%, 0.05) 0px 15px 35px -5px',\n//   ...theme.applyStyles('dark', {\n//     boxShadow:\n//       'hsla(220, 30%, 5%, 0.5) 0px 5px 15px 0px, hsla(220, 25%, 10%, 0.08) 0px 15px 35px -5px',\n//   }),\n// }));\n\n// const SignUpContainer = styled(Stack)(({ theme }) => ({\n//   minHeight: '100%',\n//   padding: theme.spacing(2),\n//   [theme.breakpoints.up('sm')]: {\n//     padding: theme.spacing(4),\n//   },\n// }));\n\n// export default function SignUp() {\n//   const [emailError, setEmailError] = React.useState(false);\n//   const [emailErrorMessage, setEmailErrorMessage] = React.useState('');\n//   const [passwordError, setPasswordError] = React.useState(false);\n//   const [passwordErrorMessage, setPasswordErrorMessage] = React.useState('');\n//   const [nameError, setNameError] = React.useState(false);\n//   const [nameErrorMessage, setNameErrorMessage] = React.useState('');\n\n//   const validateInputs = () => {\n//     const email = document.getElementById('email') as HTMLInputElement;\n//     const password = document.getElementById('password') as HTMLInputElement;\n//     const name = document.getElementById('name') as HTMLInputElement;\n\n//     let isValid = true;\n\n//     if (!email.value || !/\\S+@\\S+\\.\\S+/.test(email.value)) {\n//       setEmailError(true);\n//       setEmailErrorMessage('Please enter a valid email address.');\n//       isValid = false;\n//     } else {\n//       setEmailError(false);\n//       setEmailErrorMessage('');\n//     }\n\n//     if (!password.value || password.value.length < 6) {\n//       setPasswordError(true);\n//       setPasswordErrorMessage('Password must be at least 6 characters long.');\n//       isValid = false;\n//     } else {\n//       setPasswordError(false);\n//       setPasswordErrorMessage('');\n//     }\n\n//     if (!name.value || name.value.length < 1) {\n//       setNameError(true);\n//       setNameErrorMessage('Name is required.');\n//       isValid = false;\n//     } else {\n//       setNameError(false);\n//       setNameErrorMessage('');\n//     }\n\n//     return isValid;\n//   };\n\n//   const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n//     event.preventDefault();\n//     if (!validateInputs()) return;\n\n//     const data = new FormData(event.currentTarget);\n//     console.log({\n//       name: data.get('name'),\n//       email: data.get('email'),\n//       password: data.get('password'),\n//     });\n//   };\n\n//   return (\n//     <AppTheme>\n//       <CssBaseline enableColorScheme />\n//       <SignUpContainer direction=\"column\" justifyContent=\"space-between\">\n//         <Card>\n//           <Typography\n//             component=\"h1\"\n//             variant=\"h4\"\n//             sx={{ width: '100%', fontSize: 'clamp(2rem, 10vw, 2.15rem)' }}\n//           >\n//             Sign up\n//           </Typography>\n//           <Box\n//             component=\"form\"\n//             onSubmit={handleSubmit}\n//             noValidate\n//             sx={{\n//               display: 'flex',\n//               flexDirection: 'column',\n//               width: '100%',\n//               gap: 2,\n//             }}\n//           >\n//             <FormControl>\n//               <FormLabel htmlFor=\"name\">Full name</FormLabel>\n//               <TextField\n//                 error={nameError}\n//                 helperText={nameErrorMessage}\n//                 id=\"name\"\n//                 name=\"name\"\n//                 placeholder=\"Jon Snow\"\n//                 required\n//                 fullWidth\n//                 variant=\"outlined\"\n//                 color={nameError ? 'error' : 'primary'}\n//               />\n//             </FormControl>\n//             <FormControl>\n//               <FormLabel htmlFor=\"email\">Email</FormLabel>\n//               <TextField\n//                 error={emailError}\n//                 helperText={emailErrorMessage}\n//                 id=\"email\"\n//                 type=\"email\"\n//                 name=\"email\"\n//                 placeholder=\"your@email.com\"\n//                 required\n//                 fullWidth\n//                 variant=\"outlined\"\n//                 color={emailError ? 'error' : 'primary'}\n//               />\n//             </FormControl>\n//             <FormControl>\n//               <FormLabel htmlFor=\"password\">Password</FormLabel>\n//               <TextField\n//                 error={passwordError}\n//                 helperText={passwordErrorMessage}\n//                 name=\"password\"\n//                 placeholder=\"••••••\"\n//                 type=\"password\"\n//                 id=\"password\"\n//                 required\n//                 fullWidth\n//                 variant=\"outlined\"\n//                 color={passwordError ? 'error' : 'primary'}\n//               />\n//             </FormControl>\n//             <FormControlLabel\n//               control={<Checkbox value=\"agree\" color=\"primary\" />}\n//               label=\"I agree to the terms and conditions\"\n//             />\n//             <Button type=\"submit\" fullWidth variant=\"contained\">\n//               Sign up\n//             </Button>\n//             <Typography sx={{ textAlign: 'center' }}>\n//               Already have an account?{' '}\n//               <span>\n//                 <Link href=\"/\" variant=\"body2\" sx={{ alignSelf: 'center' }}>\n//                   Sign in\n//                 </Link>\n//               </span>\n//             </Typography>\n//           </Box>\n//         </Card>\n//       </SignUpContainer>\n//     </AppTheme>\n//   );\n// }\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Checkbox from '@mui/material/Checkbox';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormLabel from '@mui/material/FormLabel';\nimport FormControl from '@mui/material/FormControl';\nimport Link from '@mui/material/Link';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport Stack from '@mui/material/Stack';\nimport MuiCard from '@mui/material/Card';\nimport { styled } from '@mui/material/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Card = styled(MuiCard)(({\n  theme\n}) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  alignSelf: 'center',\n  width: '200%',\n  padding: theme.spacing(4),\n  gap: theme.spacing(2),\n  [theme.breakpoints.up('sm')]: {\n    maxWidth: '450px'\n  },\n  boxShadow: 'hsla(220, 30%, 5%, 0.05) 0px 5px 15px 0px, hsla(220, 25%, 10%, 0.05) 0px 15px 35px -5px',\n  ...theme.applyStyles('dark', {\n    boxShadow: 'hsla(220, 30%, 5%, 0.5) 0px 5px 15px 0px, hsla(220, 25%, 10%, 0.08) 0px 15px 35px -5px'\n  })\n}));\n_c = Card;\nconst SignInContainer = styled(Stack)(({\n  theme\n}) => ({\n  minHeight: '100%',\n  padding: theme.spacing(2),\n  [theme.breakpoints.up('sm')]: {\n    padding: theme.spacing(4)\n  },\n  backgroundImage: 'radial-gradient(ellipse at 50% 50%, hsl(210, 100%, 97%), hsl(0, 0%, 100%))',\n  backgroundRepeat: 'no-repeat',\n  ...theme.applyStyles('dark', {\n    backgroundImage: 'radial-gradient(at 50% 50%, hsla(210, 100%, 16%, 0.5), hsl(220, 30%, 5%))'\n  })\n}));\n_c2 = SignInContainer;\nconst SignIn = () => {\n  _s();\n  const [emailError, setEmailError] = React.useState(false);\n  const [emailErrorMessage, setEmailErrorMessage] = React.useState('');\n  const [passwordError, setPasswordError] = React.useState(false);\n  const [passwordErrorMessage, setPasswordErrorMessage] = React.useState('');\n  const validateInputs = () => {\n    const email = document.getElementById('email');\n    const password = document.getElementById('password');\n    let isValid = true;\n    if (!email.value || !/\\S+@\\S+\\.\\S+/.test(email.value)) {\n      setEmailError(true);\n      setEmailErrorMessage('Please enter a valid email address.');\n      isValid = false;\n    } else {\n      setEmailError(false);\n      setEmailErrorMessage('');\n    }\n    if (!password.value || password.value.length < 6) {\n      setPasswordError(true);\n      setPasswordErrorMessage('Password must be at least 6 characters long.');\n      isValid = false;\n    } else {\n      setPasswordError(false);\n      setPasswordErrorMessage('');\n    }\n    return isValid;\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (emailError || passwordError) {\n      return;\n    }\n    const data = new FormData(event.currentTarget);\n    console.log({\n      email: data.get('email'),\n      password: data.get('password')\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(SignInContainer, {\n    direction: \"column\",\n    justifyContent: \"space-between\",\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {\n      enableColorScheme: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      variant: \"outlined\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h4\",\n        sx: {\n          width: '100%',\n          fontSize: 'clamp(2rem, 10vw, 2.15rem)'\n        },\n        children: \"Sign in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        onSubmit: handleSubmit,\n        noValidate: true,\n        sx: {\n          display: 'flex',\n          flexDirection: 'column',\n          gap: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"email\",\n            type: \"email\",\n            name: \"email\",\n            placeholder: \"your@email.com\",\n            autoComplete: \"email\",\n            required: true,\n            fullWidth: true,\n            variant: \"outlined\",\n            error: emailError,\n            helperText: emailErrorMessage,\n            color: emailError ? 'error' : 'primary'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"password\",\n            type: \"password\",\n            name: \"password\",\n            placeholder: \"\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\",\n            autoComplete: \"current-password\",\n            required: true,\n            fullWidth: true,\n            variant: \"outlined\",\n            error: passwordError,\n            helperText: passwordErrorMessage,\n            color: passwordError ? 'error' : 'primary'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            value: \"remember\",\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 22\n          }, this),\n          label: \"Remember me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          onClick: validateInputs,\n          children: \"Sign in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            textAlign: 'center'\n          },\n          children: [\"Don't have an account?\", ' ', /*#__PURE__*/_jsxDEV(Link, {\n            href: \"/sign-up\",\n            variant: \"body2\",\n            children: \"Sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 282,\n    columnNumber: 5\n  }, this);\n};\n_s(SignIn, \"8lALrhpE+iB6bgXUiVde/c8yUN4=\");\n_c3 = SignIn;\nexport default SignIn;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Card\");\n$RefreshReg$(_c2, \"SignInContainer\");\n$RefreshReg$(_c3, \"SignIn\");","map":{"version":3,"names":["React","Box","Button","Checkbox","CssBaseline","FormControlLabel","FormLabel","FormControl","Link","TextField","Typography","Stack","MuiCard","styled","jsxDEV","_jsxDEV","Card","theme","display","flexDirection","alignSelf","width","padding","spacing","gap","breakpoints","up","maxWidth","boxShadow","applyStyles","_c","SignInContainer","minHeight","backgroundImage","backgroundRepeat","_c2","SignIn","_s","emailError","setEmailError","useState","emailErrorMessage","setEmailErrorMessage","passwordError","setPasswordError","passwordErrorMessage","setPasswordErrorMessage","validateInputs","email","document","getElementById","password","isValid","value","test","length","handleSubmit","event","preventDefault","data","FormData","currentTarget","console","log","get","direction","justifyContent","children","enableColorScheme","fileName","_jsxFileName","lineNumber","columnNumber","variant","component","sx","fontSize","onSubmit","noValidate","htmlFor","id","type","name","placeholder","autoComplete","required","fullWidth","error","helperText","color","control","label","onClick","textAlign","href","_c3","$RefreshReg$"],"sources":["C:/Users/Raluca.Sodinca/Disertatie2/frontend/src/sign-up/SignUp.tsx"],"sourcesContent":["// import * as React from 'react';\r\n// import Box from '@mui/material/Box';\r\n// import Button from '@mui/material/Button';\r\n// import Checkbox from '@mui/material/Checkbox';\r\n// import CssBaseline from '@mui/material/CssBaseline';\r\n// import FormControlLabel from '@mui/material/FormControlLabel';\r\n// import FormLabel from '@mui/material/FormLabel';\r\n// import FormControl from '@mui/material/FormControl';\r\n// import Link from '@mui/material/Link';\r\n// import TextField from '@mui/material/TextField';\r\n// import Typography from '@mui/material/Typography';\r\n// import Stack from '@mui/material/Stack';\r\n// import MuiCard from '@mui/material/Card';\r\n// import { styled } from '@mui/material/styles';\r\n// import AppTheme from '../shared-theme/AppTheme'; // Asigură-te că calea este corectă\r\n\r\n// const Card = styled(MuiCard)(({ theme }) => ({\r\n//   display: 'flex',\r\n//   flexDirection: 'column',\r\n//   alignSelf: 'center',\r\n//   width: '200%',\r\n//   padding: theme.spacing(4),\r\n//   gap: theme.spacing(2),\r\n//   [theme.breakpoints.up('sm')]: {\r\n//     maxWidth: '450px',\r\n//   },\r\n//   boxShadow:\r\n//     'hsla(220, 30%, 5%, 0.05) 0px 5px 15px 0px, hsla(220, 25%, 10%, 0.05) 0px 15px 35px -5px',\r\n//   ...theme.applyStyles('dark', {\r\n//     boxShadow:\r\n//       'hsla(220, 30%, 5%, 0.5) 0px 5px 15px 0px, hsla(220, 25%, 10%, 0.08) 0px 15px 35px -5px',\r\n//   }),\r\n// }));\r\n\r\n// const SignUpContainer = styled(Stack)(({ theme }) => ({\r\n//   minHeight: '100%',\r\n//   padding: theme.spacing(2),\r\n//   [theme.breakpoints.up('sm')]: {\r\n//     padding: theme.spacing(4),\r\n//   },\r\n// }));\r\n\r\n// export default function SignUp() {\r\n//   const [emailError, setEmailError] = React.useState(false);\r\n//   const [emailErrorMessage, setEmailErrorMessage] = React.useState('');\r\n//   const [passwordError, setPasswordError] = React.useState(false);\r\n//   const [passwordErrorMessage, setPasswordErrorMessage] = React.useState('');\r\n//   const [nameError, setNameError] = React.useState(false);\r\n//   const [nameErrorMessage, setNameErrorMessage] = React.useState('');\r\n\r\n//   const validateInputs = () => {\r\n//     const email = document.getElementById('email') as HTMLInputElement;\r\n//     const password = document.getElementById('password') as HTMLInputElement;\r\n//     const name = document.getElementById('name') as HTMLInputElement;\r\n\r\n//     let isValid = true;\r\n\r\n//     if (!email.value || !/\\S+@\\S+\\.\\S+/.test(email.value)) {\r\n//       setEmailError(true);\r\n//       setEmailErrorMessage('Please enter a valid email address.');\r\n//       isValid = false;\r\n//     } else {\r\n//       setEmailError(false);\r\n//       setEmailErrorMessage('');\r\n//     }\r\n\r\n//     if (!password.value || password.value.length < 6) {\r\n//       setPasswordError(true);\r\n//       setPasswordErrorMessage('Password must be at least 6 characters long.');\r\n//       isValid = false;\r\n//     } else {\r\n//       setPasswordError(false);\r\n//       setPasswordErrorMessage('');\r\n//     }\r\n\r\n//     if (!name.value || name.value.length < 1) {\r\n//       setNameError(true);\r\n//       setNameErrorMessage('Name is required.');\r\n//       isValid = false;\r\n//     } else {\r\n//       setNameError(false);\r\n//       setNameErrorMessage('');\r\n//     }\r\n\r\n//     return isValid;\r\n//   };\r\n\r\n//   const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n//     event.preventDefault();\r\n//     if (!validateInputs()) return;\r\n\r\n//     const data = new FormData(event.currentTarget);\r\n//     console.log({\r\n//       name: data.get('name'),\r\n//       email: data.get('email'),\r\n//       password: data.get('password'),\r\n//     });\r\n//   };\r\n\r\n//   return (\r\n//     <AppTheme>\r\n//       <CssBaseline enableColorScheme />\r\n//       <SignUpContainer direction=\"column\" justifyContent=\"space-between\">\r\n//         <Card>\r\n//           <Typography\r\n//             component=\"h1\"\r\n//             variant=\"h4\"\r\n//             sx={{ width: '100%', fontSize: 'clamp(2rem, 10vw, 2.15rem)' }}\r\n//           >\r\n//             Sign up\r\n//           </Typography>\r\n//           <Box\r\n//             component=\"form\"\r\n//             onSubmit={handleSubmit}\r\n//             noValidate\r\n//             sx={{\r\n//               display: 'flex',\r\n//               flexDirection: 'column',\r\n//               width: '100%',\r\n//               gap: 2,\r\n//             }}\r\n//           >\r\n//             <FormControl>\r\n//               <FormLabel htmlFor=\"name\">Full name</FormLabel>\r\n//               <TextField\r\n//                 error={nameError}\r\n//                 helperText={nameErrorMessage}\r\n//                 id=\"name\"\r\n//                 name=\"name\"\r\n//                 placeholder=\"Jon Snow\"\r\n//                 required\r\n//                 fullWidth\r\n//                 variant=\"outlined\"\r\n//                 color={nameError ? 'error' : 'primary'}\r\n//               />\r\n//             </FormControl>\r\n//             <FormControl>\r\n//               <FormLabel htmlFor=\"email\">Email</FormLabel>\r\n//               <TextField\r\n//                 error={emailError}\r\n//                 helperText={emailErrorMessage}\r\n//                 id=\"email\"\r\n//                 type=\"email\"\r\n//                 name=\"email\"\r\n//                 placeholder=\"your@email.com\"\r\n//                 required\r\n//                 fullWidth\r\n//                 variant=\"outlined\"\r\n//                 color={emailError ? 'error' : 'primary'}\r\n//               />\r\n//             </FormControl>\r\n//             <FormControl>\r\n//               <FormLabel htmlFor=\"password\">Password</FormLabel>\r\n//               <TextField\r\n//                 error={passwordError}\r\n//                 helperText={passwordErrorMessage}\r\n//                 name=\"password\"\r\n//                 placeholder=\"••••••\"\r\n//                 type=\"password\"\r\n//                 id=\"password\"\r\n//                 required\r\n//                 fullWidth\r\n//                 variant=\"outlined\"\r\n//                 color={passwordError ? 'error' : 'primary'}\r\n//               />\r\n//             </FormControl>\r\n//             <FormControlLabel\r\n//               control={<Checkbox value=\"agree\" color=\"primary\" />}\r\n//               label=\"I agree to the terms and conditions\"\r\n//             />\r\n//             <Button type=\"submit\" fullWidth variant=\"contained\">\r\n//               Sign up\r\n//             </Button>\r\n//             <Typography sx={{ textAlign: 'center' }}>\r\n//               Already have an account?{' '}\r\n//               <span>\r\n//                 <Link href=\"/\" variant=\"body2\" sx={{ alignSelf: 'center' }}>\r\n//                   Sign in\r\n//                 </Link>\r\n//               </span>\r\n//             </Typography>\r\n//           </Box>\r\n//         </Card>\r\n//       </SignUpContainer>\r\n//     </AppTheme>\r\n//   );\r\n// }\r\nimport * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Link from '@mui/material/Link';\r\nimport TextField from '@mui/material/TextField';\r\nimport Typography from '@mui/material/Typography';\r\nimport Stack from '@mui/material/Stack';\r\nimport MuiCard from '@mui/material/Card';\r\nimport { styled } from '@mui/material/styles';\r\n\r\nconst Card = styled(MuiCard)(({ theme }) => ({\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignSelf: 'center',\r\n  width: '200%',\r\n  padding: theme.spacing(4),\r\n  gap: theme.spacing(2),\r\n  [theme.breakpoints.up('sm')]: {\r\n    maxWidth: '450px',\r\n  },\r\n  boxShadow:\r\n    'hsla(220, 30%, 5%, 0.05) 0px 5px 15px 0px, hsla(220, 25%, 10%, 0.05) 0px 15px 35px -5px',\r\n  ...theme.applyStyles('dark', {\r\n    boxShadow:\r\n      'hsla(220, 30%, 5%, 0.5) 0px 5px 15px 0px, hsla(220, 25%, 10%, 0.08) 0px 15px 35px -5px',\r\n  }),\r\n}));\r\n\r\nconst SignInContainer = styled(Stack)(({ theme }) => ({\r\n  minHeight: '100%',\r\n  padding: theme.spacing(2),\r\n  [theme.breakpoints.up('sm')]: {\r\n    padding: theme.spacing(4),\r\n  },\r\n  backgroundImage:\r\n    'radial-gradient(ellipse at 50% 50%, hsl(210, 100%, 97%), hsl(0, 0%, 100%))',\r\n  backgroundRepeat: 'no-repeat',\r\n  ...theme.applyStyles('dark', {\r\n    backgroundImage:\r\n      'radial-gradient(at 50% 50%, hsla(210, 100%, 16%, 0.5), hsl(220, 30%, 5%))',\r\n  }),\r\n}));\r\n\r\nconst SignIn = () => {\r\n  const [emailError, setEmailError] = React.useState(false);\r\n  const [emailErrorMessage, setEmailErrorMessage] = React.useState('');\r\n  const [passwordError, setPasswordError] = React.useState(false);\r\n  const [passwordErrorMessage, setPasswordErrorMessage] = React.useState('');\r\n\r\n  const validateInputs = () => {\r\n    const email = document.getElementById('email') as HTMLInputElement;\r\n    const password = document.getElementById('password') as HTMLInputElement;\r\n\r\n    let isValid = true;\r\n\r\n    if (!email.value || !/\\S+@\\S+\\.\\S+/.test(email.value)) {\r\n      setEmailError(true);\r\n      setEmailErrorMessage('Please enter a valid email address.');\r\n      isValid = false;\r\n    } else {\r\n      setEmailError(false);\r\n      setEmailErrorMessage('');\r\n    }\r\n\r\n    if (!password.value || password.value.length < 6) {\r\n      setPasswordError(true);\r\n      setPasswordErrorMessage('Password must be at least 6 characters long.');\r\n      isValid = false;\r\n    } else {\r\n      setPasswordError(false);\r\n      setPasswordErrorMessage('');\r\n    }\r\n\r\n    return isValid;\r\n  };\r\n\r\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    if (emailError || passwordError) {\r\n      return;\r\n    }\r\n    const data = new FormData(event.currentTarget);\r\n    console.log({\r\n      email: data.get('email'),\r\n      password: data.get('password'),\r\n    });\r\n  };\r\n\r\n  return (\r\n    <SignInContainer direction=\"column\" justifyContent=\"space-between\">\r\n      <CssBaseline enableColorScheme />\r\n      <Card variant=\"outlined\">\r\n        <Typography\r\n          component=\"h1\"\r\n          variant=\"h4\"\r\n          sx={{ width: '100%', fontSize: 'clamp(2rem, 10vw, 2.15rem)' }}\r\n        >\r\n          Sign in\r\n        </Typography>\r\n        <Box\r\n          component=\"form\"\r\n          onSubmit={handleSubmit}\r\n          noValidate\r\n          sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}\r\n        >\r\n          <FormControl>\r\n            <FormLabel htmlFor=\"email\">Email</FormLabel>\r\n            <TextField\r\n              id=\"email\"\r\n              type=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"your@email.com\"\r\n              autoComplete=\"email\"\r\n              required\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              error={emailError}\r\n              helperText={emailErrorMessage}\r\n              color={emailError ? 'error' : 'primary'}\r\n            />\r\n          </FormControl>\r\n\r\n          <FormControl>\r\n            <FormLabel htmlFor=\"password\">Password</FormLabel>\r\n            <TextField\r\n              id=\"password\"\r\n              type=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"••••••\"\r\n              autoComplete=\"current-password\"\r\n              required\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              error={passwordError}\r\n              helperText={passwordErrorMessage}\r\n              color={passwordError ? 'error' : 'primary'}\r\n            />\r\n          </FormControl>\r\n\r\n          <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          />\r\n          \r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            onClick={validateInputs}\r\n          >\r\n            Sign in\r\n          </Button>\r\n          <Typography sx={{ textAlign: 'center' }}>\r\n            Don&apos;t have an account?{' '}\r\n            <Link href=\"/sign-up\" variant=\"body2\">\r\n              Sign up\r\n            </Link>\r\n          </Typography>\r\n        </Box>\r\n      </Card>\r\n    </SignInContainer>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,gBAAgB,MAAM,gCAAgC;AAC7D,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,UAAU,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}